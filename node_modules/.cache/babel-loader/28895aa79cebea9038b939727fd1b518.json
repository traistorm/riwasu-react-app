{"ast":null,"code":"import _classCallCheck from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/bold/boldediting\n */\nimport { Plugin } from 'ckeditor5/src/core';\nimport AttributeCommand from '../attributecommand';\nvar BOLD = 'bold';\n/**\n * The bold editing feature.\n *\n * It registers the `'bold'` command and introduces the `bold` attribute in the model which renders to the view\n * as a `<strong>` element.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar BoldEditing = /*#__PURE__*/function (_Plugin) {\n  _inherits(BoldEditing, _Plugin);\n\n  function BoldEditing() {\n    _classCallCheck(this, BoldEditing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BoldEditing).apply(this, arguments));\n  }\n\n  _createClass(BoldEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor; // Allow bold attribute on text nodes.\n\n      editor.model.schema.extend('$text', {\n        allowAttributes: BOLD\n      });\n      editor.model.schema.setAttributeProperties(BOLD, {\n        isFormatting: true,\n        copyOnEnter: true\n      }); // Build converter from model to view for data and editing pipelines.\n\n      editor.conversion.attributeToElement({\n        model: BOLD,\n        view: 'strong',\n        upcastAlso: ['b', function (viewElement) {\n          var fontWeight = viewElement.getStyle('font-weight');\n\n          if (!fontWeight) {\n            return null;\n          } // Value of the `font-weight` attribute can be defined as a string or a number.\n\n\n          if (fontWeight == 'bold' || Number(fontWeight) >= 600) {\n            return {\n              name: true,\n              styles: ['font-weight']\n            };\n          }\n        }]\n      }); // Create bold command.\n\n      editor.commands.add(BOLD, new AttributeCommand(editor, BOLD)); // Set the Ctrl+B keystroke.\n\n      editor.keystrokes.set('CTRL+B', BOLD);\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'BoldEditing';\n    }\n  }]);\n\n  return BoldEditing;\n}(Plugin);\n\nexport { BoldEditing as default };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n  name: 'fontSize',\n  display: 'submenu',\n  add: function add(core, targetElement) {\n    var context = core.context;\n    context.fontSize = {\n      targetText: targetElement.querySelector('.txt'),\n      _sizeList: null,\n      currentSize: ''\n    };\n    /** set submenu */\n\n    var listDiv = this.setSubmenu(core);\n    var listUl = listDiv.querySelector('ul');\n    /** add event listeners */\n\n    listUl.addEventListener('click', this.pickup.bind(core));\n    context.fontSize._sizeList = listUl.querySelectorAll('li button');\n    /** append target button menu */\n\n    core.initMenuTarget(this.name, targetElement, listDiv);\n    /** empty memory */\n\n    listDiv = null, listUl = null;\n  },\n  setSubmenu: function setSubmenu(core) {\n    var option = core.options;\n    var lang = core.lang;\n    var listDiv = core.util.createElement('DIV');\n    listDiv.className = 'se-submenu se-list-layer se-list-font-size';\n    var sizeList = !option.fontSize ? [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72] : option.fontSize;\n    var list = '<div class=\"se-list-inner\">' + '<ul class=\"se-list-basic\">' + '<li><button type=\"button\" class=\"default_value se-btn-list\" title=\"' + lang.toolbar.default + '\" aria-label=\"' + lang.toolbar.default + '\">(' + lang.toolbar.default + ')</button></li>';\n\n    for (var i = 0, unit = option.fontSizeUnit, len = sizeList.length, size; i < len; i++) {\n      size = sizeList[i];\n      list += '<li><button type=\"button\" class=\"se-btn-list\" data-value=\"' + size + unit + '\" title=\"' + size + unit + '\" aria-label=\"' + size + unit + '\" style=\"font-size:' + size + unit + ';\">' + size + '</button></li>';\n    }\n\n    list += '</ul></div>';\n    listDiv.innerHTML = list;\n    return listDiv;\n  },\n\n  /**\n  * @Override core\n  */\n  active: function active(element) {\n    if (!element) {\n      this.util.changeTxt(this.context.fontSize.targetText, this.hasFocus ? this.options.__defaultFontSize || this.wwComputedStyle.fontSize : this.lang.toolbar.fontSize);\n    } else if (element.style && element.style.fontSize.length > 0) {\n      this.util.changeTxt(this.context.fontSize.targetText, element.style.fontSize);\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\n  * @Override submenu\n  */\n  on: function on() {\n    var fontSizeContext = this.context.fontSize;\n    var sizeList = fontSizeContext._sizeList;\n    var currentSize = fontSizeContext.targetText.textContent;\n\n    if (currentSize !== fontSizeContext.currentSize) {\n      for (var i = 0, len = sizeList.length; i < len; i++) {\n        if (currentSize === sizeList[i].getAttribute('data-value')) {\n          this.util.addClass(sizeList[i], 'active');\n        } else {\n          this.util.removeClass(sizeList[i], 'active');\n        }\n      }\n\n      fontSizeContext.currentSize = currentSize;\n    }\n  },\n  pickup: function pickup(e) {\n    if (!/^BUTTON$/i.test(e.target.tagName)) return false;\n    e.preventDefault();\n    e.stopPropagation();\n    var value = e.target.getAttribute('data-value');\n\n    if (value) {\n      var newNode = this.util.createElement('SPAN');\n      newNode.style.fontSize = value;\n      this.nodeChange(newNode, ['font-size'], null, null);\n    } else {\n      this.nodeChange(null, ['font-size'], ['span'], true);\n    }\n\n    this.submenuOff();\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// Ref: https://github.com/thefrontside/deprecated-prop-type/blob/master/deprecated.js\nvar warned = {};\nexport default function deprecatePropType(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    // Note ...rest here\n    if (props[propName] != null) {\n      var message = \"\\\"\" + propName + \"\\\" property of \\\"\" + componentName + \"\\\" has been deprecated.\\n\" + explanation;\n\n      if (!warned[message]) {\n        console.warn(message);\n        warned[message] = true;\n      }\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest)); // and here\n  };\n}\n\nfunction _resetWarned() {\n  warned = {};\n}\n\ndeprecatePropType._resetWarned = _resetWarned;","map":null,"metadata":{},"sourceType":"module"}
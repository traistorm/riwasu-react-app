{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\n\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames, useTimeout, MESSAGE_STATUS_ICONS, STATUS, useIsMounted } from '../utils';\nimport CloseButton from '../CloseButton';\nvar Message = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _withClassPrefix;\n\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'message' : _props$classPrefix,\n      children = props.children,\n      closable = props.closable,\n      _props$duration = props.duration,\n      duration = _props$duration === void 0 ? 2000 : _props$duration,\n      full = props.full,\n      header = props.header,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'info' : _props$type,\n      showIcon = props.showIcon,\n      onClose = props.onClose,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"className\", \"classPrefix\", \"children\", \"closable\", \"duration\", \"full\", \"header\", \"type\", \"showIcon\", \"onClose\"]);\n\n  var _useState = useState('show'),\n      display = _useState[0],\n      setDisplay = _useState[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var isMounted = useIsMounted(); // Timed close message\n\n  var _useTimeout = useTimeout(onClose, duration, duration > 0),\n      clear = _useTimeout.clear;\n\n  var handleClose = useCallback(function (event) {\n    setDisplay('hiding');\n    onClose === null || onClose === void 0 ? void 0 : onClose(event);\n    clear();\n    setTimeout(function () {\n      if (isMounted()) {\n        setDisplay('hide');\n      }\n    }, 1000);\n  }, [clear, isMounted, onClose]);\n\n  if (display === 'hide') {\n    return null;\n  }\n\n  var classes = merge(className, withClassPrefix(type, display, (_withClassPrefix = {\n    full: full\n  }, _withClassPrefix['has-title'] = header, _withClassPrefix['has-icon'] = showIcon, _withClassPrefix)));\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"alert\"\n  }, rest, {\n    ref: ref,\n    className: classes\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"container\"])))\n  }, closable && /*#__PURE__*/React.createElement(CloseButton, {\n    onClick: handleClose\n  }), showIcon && /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"icon-wrapper\"])))\n  }, MESSAGE_STATUS_ICONS[type]), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"content\"])))\n  }, header && /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"header\"])))\n  }, header), children && /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"body\"])))\n  }, children))));\n});\nMessage.displayName = 'Message';\nMessage.propTypes = {\n  type: PropTypes.oneOf(STATUS),\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  closable: PropTypes.bool,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  showIcon: PropTypes.bool,\n  full: PropTypes.bool,\n  classPrefix: PropTypes.string\n};\nexport default Message;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport core from './lib/core';\nimport util from './lib/util';\nimport _Constructor from './lib/constructor';\nimport _Context from './lib/context';\nexport default {\n  /**\n   * @description Returns the create function with preset options.\n   * If the options overlap, the options of the 'create' function take precedence.\n   * @param {Json} options Initialization options\n   * @returns {Object}\n   */\n  init: function init(init_options) {\n    return {\n      create: function (idOrElement, options) {\n        return this.create(idOrElement, options, init_options);\n      }.bind(this)\n    };\n  },\n\n  /**\n   * @description Create the suneditor\n   * @param {String|Element} idOrElement textarea Id or textarea element\n   * @param {JSON|Object} options user options\n   * @returns {Object}\n   */\n  create: function create(idOrElement, options, _init_options) {\n    util._propertiesInit();\n\n    if (typeof options !== 'object') options = {};\n\n    if (_init_options) {\n      options = [_init_options, options].reduce(function (init, option) {\n        for (var key in option) {\n          if (!util.hasOwn(option, key)) continue;\n\n          if (key === 'plugins' && option[key] && init[key]) {\n            (function () {\n              var i = init[key],\n                  o = option[key];\n              i = i.length ? i : Object.keys(i).map(function (name) {\n                return i[name];\n              });\n              o = o.length ? o : Object.keys(o).map(function (name) {\n                return o[name];\n              });\n              init[key] = o.filter(function (val) {\n                return i.indexOf(val) === -1;\n              }).concat(i);\n            })();\n          } else {\n            init[key] = option[key];\n          }\n        }\n\n        return init;\n      }, {});\n    }\n\n    var element = typeof idOrElement === 'string' ? document.getElementById(idOrElement) : idOrElement;\n\n    if (!element) {\n      if (typeof idOrElement === 'string') {\n        throw Error('[SUNEDITOR.create.fail] The element for that id was not found (ID:\"' + idOrElement + '\")');\n      }\n\n      throw Error('[SUNEDITOR.create.fail] suneditor requires textarea\\'s element or id value');\n    }\n\n    var cons = _Constructor.init(element, options);\n\n    if (cons.constructed._top.id && document.getElementById(cons.constructed._top.id)) {\n      throw Error('[SUNEDITOR.create.fail] The ID of the suneditor you are trying to create already exists (ID:\"' + cons.constructed._top.id + '\")');\n    }\n\n    return core(_Context(element, cons.constructed, cons.options), cons.pluginCallButtons, cons.plugins, cons.options.lang, options, cons._responsiveButtons);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editorui/bodycollection\n */\n\n/* globals document */\nimport Template from '../template';\nimport ViewCollection from '../viewcollection';\nimport createElement from '@ckeditor/ckeditor5-utils/src/dom/createelement';\n/**\n * This is a special {@link module:ui/viewcollection~ViewCollection} dedicated to elements that are detached\n * from the DOM structure of the editor, like panels, icons, etc.\n *\n * The body collection is available in the {@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`} property.\n * Any plugin can add a {@link module:ui/view~View view} to this collection.\n * These views will render in a container placed directly in the `<body>` element.\n * The editor will detach and destroy this collection when the editor will be {@link module:core/editor/editor~Editor#destroy destroyed}.\n *\n * If you need to control the life cycle of the body collection on your own, you can create your own instance of this class.\n *\n * A body collection will render itself automatically in the DOM body element as soon as you call {@link ~BodyCollection#attachToDom}.\n * If you create multiple body collections, this class will create a special wrapper element in the DOM to limit the number of\n * elements created directly in the body and remove it when the last body collection will be\n * {@link ~BodyCollection#detachFromDom detached}.\n *\n * @extends module:ui/viewcollection~ViewCollection\n */\n\nvar BodyCollection = /*#__PURE__*/function (_ViewCollection) {\n  _inherits(BodyCollection, _ViewCollection);\n\n  /**\n   * Creates a new instance of the {@link module:ui/editorui/bodycollection~BodyCollection}.\n   *\n   * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor editor's locale} instance.\n   * @param {Iterable.<module:ui/view~View>} [initialItems] The initial items of the collection.\n   */\n  function BodyCollection(locale) {\n    var _this;\n\n    var initialItems = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, BodyCollection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BodyCollection).call(this, initialItems));\n    /**\n     * The {@link module:core/editor/editor~Editor#locale editor's locale} instance.\n     * See the view {@link module:ui/view~View#locale locale} property.\n     *\n     * @member {module:utils/locale~Locale}\n     */\n\n    _this.locale = locale;\n    return _this;\n  }\n  /**\n   * Attaches the body collection to the DOM body element. You need to execute this method to render the content of\n   * the body collection.\n   */\n\n\n  _createClass(BodyCollection, [{\n    key: \"attachToDom\",\n    value: function attachToDom() {\n      /**\n       * The element holding elements of the body region.\n       *\n       * @protected\n       * @member {HTMLElement} #_bodyCollectionContainer\n       */\n      this._bodyCollectionContainer = new Template({\n        tag: 'div',\n        attributes: {\n          class: ['ck', 'ck-reset_all', 'ck-body', 'ck-rounded-corners'],\n          dir: this.locale.uiLanguageDirection\n        },\n        children: this\n      }).render();\n      var wrapper = document.querySelector('.ck-body-wrapper');\n\n      if (!wrapper) {\n        wrapper = createElement(document, 'div', {\n          class: 'ck-body-wrapper'\n        });\n        document.body.appendChild(wrapper);\n      }\n\n      wrapper.appendChild(this._bodyCollectionContainer);\n    }\n    /**\n     * Detaches the collection from the DOM structure. Use this method when you do not need to use the body collection\n     * anymore to clean-up the DOM structure.\n     */\n\n  }, {\n    key: \"detachFromDom\",\n    value: function detachFromDom() {\n      _get(_getPrototypeOf(BodyCollection.prototype), \"destroy\", this).call(this);\n\n      if (this._bodyCollectionContainer) {\n        this._bodyCollectionContainer.remove();\n      }\n\n      var wrapper = document.querySelector('.ck-body-wrapper');\n\n      if (wrapper && wrapper.childElementCount == 0) {\n        wrapper.remove();\n      }\n    }\n  }]);\n\n  return BodyCollection;\n}(ViewCollection);\n\nexport { BodyCollection as default };","map":null,"metadata":{},"sourceType":"module"}
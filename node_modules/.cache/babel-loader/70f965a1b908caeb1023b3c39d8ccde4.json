{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Check from '@rsuite/icons/Check';\nimport Close from '@rsuite/icons/Close';\nimport { useClassNames } from '../utils';\nvar STEP_STATUS_ICON = {\n  finish: /*#__PURE__*/React.createElement(Check, null),\n  wait: null,\n  process: null,\n  error: /*#__PURE__*/React.createElement(Close, null)\n};\nvar StepItem = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _withClassPrefix, _STEP_STATUS_ICON$sta;\n\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'steps-item' : _props$classPrefix,\n      style = props.style,\n      itemWidth = props.itemWidth,\n      status = props.status,\n      icon = props.icon,\n      stepNumber = props.stepNumber,\n      description = props.description,\n      title = props.title,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"className\", \"classPrefix\", \"style\", \"itemWidth\", \"status\", \"icon\", \"stepNumber\", \"description\", \"title\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix,\n      prefix = _useClassNames.prefix;\n\n  var classes = merge(className, withClassPrefix((_withClassPrefix = {\n    custom: icon\n  }, _withClassPrefix[\"status-\" + status] = status, _withClassPrefix)));\n\n  var styles = _extends({\n    width: itemWidth\n  }, style);\n\n  var iconNode = /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix('icon', \"icon-\" + status)\n  }, status ? (_STEP_STATUS_ICON$sta = STEP_STATUS_ICON[status]) !== null && _STEP_STATUS_ICON$sta !== void 0 ? _STEP_STATUS_ICON$sta : stepNumber : stepNumber);\n\n  if (icon) {\n    iconNode = /*#__PURE__*/React.createElement(\"span\", {\n      className: prefix('icon')\n    }, icon);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes,\n    style: styles\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('tail')\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(['icon-wrapper', icon ? 'custom-icon' : ''])\n  }, iconNode), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('content')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('title')\n  }, title), description && /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('description')\n  }, description)));\n});\nStepItem.displayName = 'StepItem';\nStepItem.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  style: PropTypes.object,\n  itemWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  status: PropTypes.oneOf(['finish', 'wait', 'process', 'error']),\n  icon: PropTypes.object,\n  stepNumber: PropTypes.number,\n  description: PropTypes.node,\n  title: PropTypes.node\n};\nexport default StepItem;","map":null,"metadata":{},"sourceType":"module"}
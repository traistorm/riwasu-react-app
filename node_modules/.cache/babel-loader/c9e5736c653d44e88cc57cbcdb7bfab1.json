{"ast":null,"code":"import { useRef, useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport canUseDOM from 'dom-lib/canUseDOM';\n\nfunction usePortal(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      id = _props.id,\n      container = _props.container;\n  var rootElemRef = useRef(canUseDOM ? document.body : null);\n  useEffect(function () {\n    var containerElement = typeof container === 'function' ? container() : container; // Look for existing target dom element to append to\n\n    var existingParent = id && document.querySelector(\"#\" + id); // Parent is either a new root or the existing dom element\n\n    var parentElement = containerElement || existingParent || document.body;\n    rootElemRef.current = parentElement;\n  }, [rootElemRef, container, id]);\n  var Portal = useCallback(function (_ref) {\n    var children = _ref.children;\n    if (rootElemRef.current != null) return /*#__PURE__*/createPortal(children, rootElemRef.current);\n    return null;\n  }, [rootElemRef]);\n  return {\n    target: rootElemRef.current,\n    Portal: Portal\n  };\n}\n\nexport default usePortal;","map":null,"metadata":{},"sourceType":"module"}
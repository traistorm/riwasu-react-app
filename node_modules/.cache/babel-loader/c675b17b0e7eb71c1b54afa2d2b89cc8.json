{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from '../utils';\nimport { ModalContext } from './ModalContext';\nimport IconButton from '../IconButton';\nimport Close from '@rsuite/icons/Close';\nvar ModalBody = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'modal-body' : _props$classPrefix,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"className\", \"style\", \"children\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var classes = merge(className, withClassPrefix());\n  return /*#__PURE__*/React.createElement(ModalContext.Consumer, null, function (context) {\n    var _context$getBodyStyle;\n\n    var bodyStyles = context === null || context === void 0 ? void 0 : (_context$getBodyStyle = context.getBodyStyles) === null || _context$getBodyStyle === void 0 ? void 0 : _context$getBodyStyle.call(context);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n      ref: ref,\n      style: _extends({}, bodyStyles, style),\n      className: classes\n    }), (context === null || context === void 0 ? void 0 : context.isDrawer) && /*#__PURE__*/React.createElement(IconButton, {\n      icon: /*#__PURE__*/React.createElement(Close, null),\n      appearance: \"subtle\",\n      size: \"sm\",\n      className: prefix('close'),\n      onClick: context === null || context === void 0 ? void 0 : context.onModalClose\n    }), children);\n  });\n});\nModalBody.displayName = 'ModalBody';\nModalBody.propTypes = {\n  as: PropTypes.elementType,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string\n};\nexport default ModalBody;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/tooltip/tooltipview\n */\nimport View from '../view';\nimport '../../theme/components/tooltip/tooltip.css';\n/**\n * The tooltip view class.\n *\n * @extends module:ui/view~View\n */\n\nvar TooltipView = /*#__PURE__*/function (_View) {\n  _inherits(TooltipView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function TooltipView(locale) {\n    var _this;\n\n    _classCallCheck(this, TooltipView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TooltipView).call(this, locale));\n    /**\n     * The text of the tooltip visible to the user.\n     *\n     * @observable\n     * @member {String} #text\n     */\n\n    _this.set('text', '');\n    /**\n     * The position of the tooltip (south, south-west, south-east, or north).\n     *\n     *\t\t+-----------+\n     *\t\t|   north   |\n     *\t\t+-----------+\n     *\t\t      V\n     *\t\t  [element]\n     *\n     *\t\t  [element]\n     *\t\t      ^\n     *\t\t+-----------+\n     *\t\t|   south   |\n     *\t\t+-----------+\n     *\n     *                +----------+\n     *    [element] < |   east   |\n     *                +----------+\n     *\n     *    +----------+\n     *    |   west   | > [element]\n     *    +----------+\n     *\n     *\t\t         [element]\n     *\t\t             ^\n     *\t\t+--------------+\n     *\t\t|  south west  |\n     *\t\t+--------------+\n     *\n     *\t  [element]\n     *\t\t  ^\n     *\t\t+--------------+\n     *\t\t|  south east  |\n     *\t\t+--------------+\n    \t * @observable\n     * @default 's'\n     * @member {'s'|'n'|'e'|'w'|'sw'|'se'} #position\n     */\n\n\n    _this.set('position', 's');\n\n    var bind = _this.bindTemplate;\n\n    _this.setTemplate({\n      tag: 'span',\n      attributes: {\n        class: ['ck', 'ck-tooltip', bind.to('position', function (position) {\n          return 'ck-tooltip_' + position;\n        }), bind.if('text', 'ck-hidden', function (value) {\n          return !value.trim();\n        })]\n      },\n      children: [{\n        tag: 'span',\n        attributes: {\n          class: ['ck', 'ck-tooltip__text']\n        },\n        children: [{\n          text: bind.to('text')\n        }]\n      }]\n    });\n\n    return _this;\n  }\n\n  return TooltipView;\n}(View);\n\nexport { TooltipView as default };","map":null,"metadata":{},"sourceType":"module"}
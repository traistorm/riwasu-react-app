{"ast":null,"code":"import _classCallCheck from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/tabobserver\n */\nimport Observer from './observer';\nimport BubblingEventInfo from './bubblingeventinfo';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * Tab observer introduces the {@link module:engine/view/document~Document#event:tab `Document#tab`} event.\n *\n * Note that because {@link module:engine/view/observer/tabobserver~TabObserver} is attached by the\n * {@link module:engine/view/view~View}, this event is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar TabObserver = /*#__PURE__*/function (_Observer) {\n  _inherits(TabObserver, _Observer);\n\n  /**\n   * @inheritDoc\n   */\n  function TabObserver(view) {\n    var _this;\n\n    _classCallCheck(this, TabObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TabObserver).call(this, view));\n    var doc = _this.document;\n    doc.on('keydown', function (evt, data) {\n      if (!_this.isEnabled || data.keyCode != keyCodes.tab || data.ctrlKey) {\n        return;\n      }\n\n      var event = new BubblingEventInfo(doc, 'tab', doc.selection.getFirstRange());\n      doc.fire(event, data);\n\n      if (event.stop.called) {\n        evt.stop();\n      }\n    });\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(TabObserver, [{\n    key: \"observe\",\n    value: function observe() {}\n  }]);\n\n  return TabObserver;\n}(Observer);\n/**\n * Event fired when the user presses a tab key.\n *\n * Introduced by {@link module:engine/view/observer/tabobserver~TabObserver}.\n *\n * Note that because {@link module:engine/view/observer/tabobserver~TabObserver} is attached by the\n * {@link module:engine/view/view~View}, this event is available by default.\n *\n * @event module:engine/view/document~Document#event:tab\n *\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n */\n\n\nexport { TabObserver as default };","map":null,"metadata":{},"sourceType":"module"}
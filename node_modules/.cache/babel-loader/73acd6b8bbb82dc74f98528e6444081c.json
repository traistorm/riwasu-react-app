{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { createChainedFunction, useClassNames } from '../utils';\nimport { ModalContext } from './ModalContext';\nimport CloseButton from '../CloseButton';\nimport Close from '@rsuite/icons/Close';\nimport IconButton from '../IconButton';\nvar ModalHeader = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'modal-header' : _props$classPrefix,\n      className = props.className,\n      _props$closeButton = props.closeButton,\n      closeButton = _props$closeButton === void 0 ? true : _props$closeButton,\n      children = props.children,\n      onClose = props.onClose,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"className\", \"closeButton\", \"children\", \"onClose\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix,\n      prefix = _useClassNames.prefix;\n\n  var classes = merge(className, withClassPrefix());\n  var context = useContext(ModalContext);\n  var buttonElement = !(context !== null && context !== void 0 && context.isDrawer) ? /*#__PURE__*/React.createElement(CloseButton, {\n    className: prefix('close'),\n    onClick: createChainedFunction(onClose, context === null || context === void 0 ? void 0 : context.onModalClose)\n  }) : /*#__PURE__*/React.createElement(IconButton, {\n    icon: /*#__PURE__*/React.createElement(Close, null),\n    appearance: \"subtle\",\n    size: \"sm\",\n    className: prefix('close'),\n    onClick: createChainedFunction(onClose, context === null || context === void 0 ? void 0 : context.onModalClose)\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), closeButton && buttonElement, children);\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.propTypes = {\n  as: PropTypes.elementType,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  closeButton: PropTypes.bool,\n  children: PropTypes.node,\n  onHide: PropTypes.func\n};\nexport default ModalHeader;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Pagination from './Pagination';\nimport SelectPicker from '../SelectPicker';\nimport Divider from '../Divider';\nimport Input from '../Input';\nimport { tplTransform, useClassNames, useCustom, useControlled } from '../utils';\n\nvar LimitPicker = function LimitPicker(props) {\n  var disabled = props.disabled,\n      limitOptions = props.limitOptions,\n      locale = props.locale,\n      limit = props.limit,\n      onChangeLimit = props.onChangeLimit,\n      size = props.size,\n      prefix = props.prefix;\n  var disabledPicker = typeof disabled === 'function' ? disabled('picker') : Boolean(disabled);\n  var formatlimitOptions = limitOptions.map(function (item) {\n    return {\n      value: item,\n      label: locale.limit && tplTransform(locale.limit, item)\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('limit')\n  }, /*#__PURE__*/React.createElement(SelectPicker, {\n    size: size,\n    cleanable: false,\n    searchable: false,\n    placement: \"topStart\",\n    data: formatlimitOptions,\n    value: limit,\n    onChange: onChangeLimit // fixme don't use any\n    ,\n    menuStyle: {\n      minWidth: 'auto'\n    },\n    disabled: disabledPicker\n  }));\n};\n\nvar defaultLayout = ['pager'];\nvar defaultLimitOptions = [30, 50, 100];\nvar PaginationGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'pagination-group' : _props$classPrefix,\n      size = props.size,\n      total = props.total,\n      prev = props.prev,\n      next = props.next,\n      first = props.first,\n      last = props.last,\n      maxButtons = props.maxButtons,\n      className = props.className,\n      _props$limitOptions = props.limitOptions,\n      limitOptions = _props$limitOptions === void 0 ? defaultLimitOptions : _props$limitOptions,\n      limitProp = props.limit,\n      activePageProp = props.activePage,\n      disabled = props.disabled,\n      style = props.style,\n      localeProp = props.locale,\n      _props$layout = props.layout,\n      layout = _props$layout === void 0 ? defaultLayout : _props$layout,\n      onChangePage = props.onChangePage,\n      onChangeLimit = props.onChangeLimit,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"size\", \"total\", \"prev\", \"next\", \"first\", \"last\", \"maxButtons\", \"className\", \"limitOptions\", \"limit\", \"activePage\", \"disabled\", \"style\", \"locale\", \"layout\", \"onChangePage\", \"onChangeLimit\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix,\n      withClassPrefix = _useClassNames.withClassPrefix;\n\n  var _useControlled = useControlled(limitProp, 30),\n      limit = _useControlled[0],\n      setLimit = _useControlled[1];\n\n  var _useControlled2 = useControlled(activePageProp, 1),\n      activePage = _useControlled2[0],\n      setActivePage = _useControlled2[1];\n\n  var _useCustom = useCustom('Pagination', localeProp),\n      locale = _useCustom.locale;\n\n  var pages = Math.floor(total / limit) + (total % limit ? 1 : 0);\n  var classes = merge(className, withClassPrefix(size));\n  var handleInputBlur = useCallback(function (event) {\n    var value = parseInt(event.target.value);\n\n    if (value > 0 && value <= pages) {\n      onChangePage === null || onChangePage === void 0 ? void 0 : onChangePage(value);\n      setActivePage(value);\n    }\n\n    event.target.value = '';\n  }, [onChangePage, pages, setActivePage]);\n  var handleInputPressEnter = useCallback(function (event) {\n    var _event$target;\n\n    (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.blur();\n  }, []);\n  var handleChangeLimit = useCallback(function (value) {\n    setLimit(value);\n    onChangeLimit === null || onChangeLimit === void 0 ? void 0 : onChangeLimit(value);\n  }, [onChangeLimit, setLimit]);\n  return /*#__PURE__*/React.createElement(Component, {\n    ref: ref,\n    className: classes,\n    style: style\n  }, layout.map(function (key, index) {\n    var onlyKey = \"\" + key + index;\n\n    if (key === '-') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('grow'),\n        key: onlyKey\n      });\n    } else if (key === '|') {\n      return /*#__PURE__*/React.createElement(Divider, {\n        vertical: true,\n        key: onlyKey\n      });\n    } else if (key === 'pager') {\n      return /*#__PURE__*/React.createElement(Pagination, _extends({\n        key: onlyKey,\n        size: size,\n        prev: prev,\n        next: next,\n        first: first,\n        last: last,\n        maxButtons: maxButtons,\n        pages: pages,\n        disabled: disabled,\n        onSelect: onChangePage // fixme don't use any\n        ,\n        activePage: activePage\n      }, rest));\n    } else if (key === 'total') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: onlyKey,\n        className: prefix('total')\n      }, locale.total && tplTransform(locale.total, total));\n    } else if (key === 'skip') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: onlyKey,\n        className: classNames(prefix('skip'))\n      }, locale.skip && tplTransform(locale.skip, /*#__PURE__*/React.createElement(Input, {\n        size: size,\n        onBlur: handleInputBlur,\n        onPressEnter: handleInputPressEnter\n      })));\n    } else if (key === 'limit') {\n      return /*#__PURE__*/React.createElement(LimitPicker, {\n        key: onlyKey,\n        size: size,\n        locale: locale,\n        limit: limit,\n        onChangeLimit: handleChangeLimit,\n        limitOptions: limitOptions,\n        disabled: disabled,\n        prefix: prefix\n      });\n    }\n\n    return key;\n  }));\n});\nPaginationGroup.displayName = 'PaginationGroup';\nPaginationGroup.propTypes = _extends({}, Pagination.propTypes, {\n  locale: PropTypes.any,\n  layout: PropTypes.array,\n  limitOptions: PropTypes.array,\n  limit: PropTypes.number,\n  total: PropTypes.number,\n  onChangePage: PropTypes.func,\n  onChangeLimit: PropTypes.func\n});\nexport default PaginationGroup;","map":null,"metadata":{},"sourceType":"module"}
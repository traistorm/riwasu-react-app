{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _templateObject;\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from '../utils';\nimport { AvatarGroupContext } from '../AvatarGroup/AvatarGroup';\nvar Avatar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'avatar' : _props$classPrefix,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      sizeProp = props.size,\n      className = props.className,\n      children = props.children,\n      src = props.src,\n      srcSet = props.srcSet,\n      sizes = props.sizes,\n      imgProps = props.imgProps,\n      circle = props.circle,\n      alt = props.alt,\n      rest = _objectWithoutPropertiesLoose(props, [\"classPrefix\", \"as\", \"size\", \"className\", \"children\", \"src\", \"srcSet\", \"sizes\", \"imgProps\", \"circle\", \"alt\"]);\n\n  var _useContext = useContext(AvatarGroupContext),\n      size = _useContext.size;\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge;\n\n  var classes = merge(className, withClassPrefix(sizeProp || size, {\n    circle: circle\n  }));\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), src || srcSet ? /*#__PURE__*/React.createElement(\"img\", _extends({}, imgProps, {\n    className: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"image\"]))),\n    src: src,\n    sizes: sizes,\n    srcSet: srcSet,\n    alt: alt\n  })) : children);\n});\nAvatar.displayName = 'Avatar';\nAvatar.propTypes = {\n  as: PropTypes.elementType,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  size: PropTypes.oneOf(['lg', 'md', 'sm', 'xs']),\n  src: PropTypes.string,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  imgProps: PropTypes.object,\n  circle: PropTypes.bool,\n  alt: PropTypes.string\n};\nexport default Avatar;","map":null,"metadata":{},"sourceType":"module"}
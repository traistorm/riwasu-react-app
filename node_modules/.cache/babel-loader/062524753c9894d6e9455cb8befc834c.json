{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _templateObject;\n\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { TypeChecker, useClassNames } from '../utils';\nvar InputSearch = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'input' : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker-search' : _props$classPrefix,\n      children = props.children,\n      className = props.className,\n      value = props.value,\n      inputRef = props.inputRef,\n      style = props.style,\n      readOnly = props.readOnly,\n      onChange = props.onChange,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"children\", \"className\", \"value\", \"inputRef\", \"style\", \"readOnly\", \"onChange\"]);\n\n  var handleChange = useCallback(function (event) {\n    var _event$target;\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value, event);\n  }, [onChange]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var classes = merge(className, withClassPrefix());\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: classes,\n    style: style\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: inputRef,\n    readOnly: readOnly,\n    className: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"input\"]))),\n    value: value,\n    onChange: handleChange\n  })), children);\n});\nInputSearch.displayName = 'InputSearch';\nInputSearch.propTypes = {\n  classPrefix: PropTypes.string,\n  value: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  style: PropTypes.object,\n  inputRef: TypeChecker.refType,\n  as: PropTypes.elementType,\n  onChange: PropTypes.func\n};\nexport default InputSearch;","map":null,"metadata":{},"sourceType":"module"}
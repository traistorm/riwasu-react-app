{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Collapse from '../Animation/Collapse';\nimport { mergeRefs, useClassNames } from '../utils';\nvar SidenavDropdownCollapse = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'dropdown-menu' : _props$classPrefix,\n      open = props.open,\n      restProps = _objectWithoutPropertiesLoose(props, [\"className\", \"classPrefix\", \"open\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var classes = merge(className, withClassPrefix());\n  return /*#__PURE__*/React.createElement(Collapse, {\n    in: open,\n    exitedClassName: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"collapse-out\"]))),\n    exitingClassName: prefix(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"collapsing\"]))),\n    enteredClassName: prefix(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"collapse-in\"]))),\n    enteringClassName: prefix(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"collapsing\"])))\n  }, function (transitionProps, transitionRef) {\n    var transitionClassName = transitionProps.className,\n        transitionRestProps = _objectWithoutPropertiesLoose(transitionProps, [\"className\"]);\n\n    return /*#__PURE__*/React.createElement(\"ul\", _extends({\n      ref: mergeRefs(ref, transitionRef),\n      role: \"group\",\n      className: classNames(classes, transitionClassName)\n    }, restProps, transitionRestProps));\n  });\n});\nSidenavDropdownCollapse.displayName = 'Sidenav.Dropdown.Collapse';\nSidenavDropdownCollapse.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  classPrefix: PropTypes.string,\n  open: PropTypes.bool\n};\nexport default SidenavDropdownCollapse;","map":null,"metadata":{},"sourceType":"module"}
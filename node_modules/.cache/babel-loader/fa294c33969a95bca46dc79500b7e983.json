{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport { isFunction } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * @module core/editor/utils/attachtoform\n */\n\n/**\n * Checks if the editor is initialized on a `<textarea>` element that belongs to a form. If yes, it updates the editor's element\n * content before submitting the form.\n *\n * This helper requires the {@link module:core/editor/utils/elementapimixin~ElementApi ElementApi interface}.\n *\n * @param {module:core/editor/editor~Editor} editor Editor instance.\n */\n\nexport default function attachToForm(editor) {\n  if (!isFunction(editor.updateSourceElement)) {\n    /**\n     * The editor passed to `attachToForm()` must implement the\n     * {@link module:core/editor/utils/elementapimixin~ElementApi} interface.\n     *\n     * @error attachtoform-missing-elementapi-interface\n     */\n    throw new CKEditorError('attachtoform-missing-elementapi-interface', editor);\n  }\n\n  var sourceElement = editor.sourceElement; // Only when replacing a textarea which is inside of a form element.\n\n  if (sourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.form) {\n    var originalSubmit;\n    var form = sourceElement.form;\n\n    var onSubmit = function onSubmit() {\n      return editor.updateSourceElement();\n    }; // Replace the original form#submit() to call a custom submit function first.\n    // Check if #submit is a function because the form might have an input named \"submit\".\n\n\n    if (isFunction(form.submit)) {\n      originalSubmit = form.submit;\n\n      form.submit = function () {\n        onSubmit();\n        originalSubmit.apply(form);\n      };\n    } // Update the replaced textarea with data before each form#submit event.\n\n\n    form.addEventListener('submit', onSubmit); // Remove the submit listener and revert the original submit method on\n    // editor#destroy.\n\n    editor.on('destroy', function () {\n      form.removeEventListener('submit', onSubmit);\n\n      if (originalSubmit) {\n        form.submit = originalSubmit;\n      }\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}
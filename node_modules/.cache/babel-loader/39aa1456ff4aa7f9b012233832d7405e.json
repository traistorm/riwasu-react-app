{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport pick from 'lodash/pick';\nimport OverlayTrigger from '../Overlay/OverlayTrigger';\nimport { placementPolyfill } from '../utils';\nimport { CustomConsumer } from '../CustomProvider';\nexport var omitTriggerPropKeys = ['onEntered', 'onExited', 'onEnter', 'onEntering', 'onExit', 'onExiting', 'open', 'defaultOpen', 'onHide', 'container', 'containerPadding', 'preventOverflow'];\nexport var pickTriggerPropKeys = [].concat(omitTriggerPropKeys, ['disabled', 'plaintext', 'readOnly']);\nvar PickerToggleTrigger = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var pickerProps = props.pickerProps,\n      speaker = props.speaker,\n      placement = props.placement,\n      _props$trigger = props.trigger,\n      trigger = _props$trigger === void 0 ? 'click' : _props$trigger,\n      rest = _objectWithoutPropertiesLoose(props, [\"pickerProps\", \"speaker\", \"placement\", \"trigger\"]);\n\n  return /*#__PURE__*/React.createElement(CustomConsumer, null, function (context) {\n    return /*#__PURE__*/React.createElement(OverlayTrigger, _extends({}, rest, pick(pickerProps, pickTriggerPropKeys), {\n      ref: ref,\n      trigger: trigger,\n      placement: placementPolyfill(placement, context === null || context === void 0 ? void 0 : context.rtl),\n      speaker: speaker\n    }));\n  });\n});\nPickerToggleTrigger.displayName = 'PickerToggleTrigger';\nexport default PickerToggleTrigger;","map":null,"metadata":{},"sourceType":"module"}
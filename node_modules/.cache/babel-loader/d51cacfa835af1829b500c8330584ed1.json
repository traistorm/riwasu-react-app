{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport some from 'lodash/some';\nimport TimelineItem from './TimelineItem';\nimport { useClassNames, ReactChildren } from '../utils';\nvar Timeline = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'ul' : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'timeline' : _props$classPrefix,\n      className = props.className,\n      _props$align = props.align,\n      align = _props$align === void 0 ? 'left' : _props$align,\n      endless = props.endless,\n      rest = _objectWithoutPropertiesLoose(props, [\"children\", \"as\", \"classPrefix\", \"className\", \"align\", \"endless\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix;\n\n  var count = React.Children.count(children);\n  var withTime = some(React.Children.toArray(children), function (item) {\n    var _item$props;\n\n    return item === null || item === void 0 ? void 0 : (_item$props = item.props) === null || _item$props === void 0 ? void 0 : _item$props.time;\n  });\n  var classes = merge(className, withClassPrefix(\"align-\" + align, {\n    endless: endless,\n    'with-time': withTime\n  }));\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), ReactChildren.mapCloneElement(children, function (_child, index) {\n    return {\n      last: index + 1 === count,\n      align: align\n    };\n  }));\n});\nTimeline.Item = TimelineItem;\nTimeline.displayName = 'Timeline';\nTimeline.propTypes = {\n  as: PropTypes.elementType,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.node,\n  align: PropTypes.oneOf(['left', 'right', 'alternate']),\n  endless: PropTypes.bool\n};\nexport default Timeline;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undoui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport undoIcon from '../theme/icons/undo.svg';\nimport redoIcon from '../theme/icons/redo.svg';\n/**\n * The undo UI feature. It introduces the `'undo'` and `'redo'` buttons to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar UndoUI = /*#__PURE__*/function (_Plugin) {\n  _inherits(UndoUI, _Plugin);\n\n  function UndoUI() {\n    _classCallCheck(this, UndoUI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UndoUI).apply(this, arguments));\n  }\n\n  _createClass(UndoUI, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor;\n      var locale = editor.locale;\n      var t = editor.t;\n      var localizedUndoIcon = locale.uiLanguageDirection == 'ltr' ? undoIcon : redoIcon;\n      var localizedRedoIcon = locale.uiLanguageDirection == 'ltr' ? redoIcon : undoIcon;\n\n      this._addButton('undo', t('Undo'), 'CTRL+Z', localizedUndoIcon);\n\n      this._addButton('redo', t('Redo'), 'CTRL+Y', localizedRedoIcon);\n    }\n    /**\n     * Creates a button for the specified command.\n     *\n     * @private\n     * @param {String} name Command name.\n     * @param {String} label Button label.\n     * @param {String} keystroke Command keystroke.\n     * @param {String} Icon Source of the icon.\n     */\n\n  }, {\n    key: \"_addButton\",\n    value: function _addButton(name, label, keystroke, Icon) {\n      var _this = this;\n\n      var editor = this.editor;\n      editor.ui.componentFactory.add(name, function (locale) {\n        var command = editor.commands.get(name);\n        var view = new ButtonView(locale);\n        view.set({\n          label: label,\n          icon: Icon,\n          keystroke: keystroke,\n          tooltip: true\n        });\n        view.bind('isEnabled').to(command, 'isEnabled');\n\n        _this.listenTo(view, 'execute', function () {\n          editor.execute(name);\n          editor.editing.view.focus();\n        });\n\n        return view;\n      });\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'UndoUI';\n    }\n  }]);\n\n  return UndoUI;\n}(Plugin);\n\nexport { UndoUI as default };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from '../utils';\nimport { FormGroupContext } from '../FormGroup/FormGroup';\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'label' : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'form-control-label' : _props$classPrefix,\n      htmlFor = props.htmlFor,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"htmlFor\", \"className\"]);\n\n  var _useContext = useContext(FormGroupContext),\n      controlId = _useContext.controlId;\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge;\n\n  var classes = merge(className, withClassPrefix());\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    id: controlId ? controlId + \"-control-label\" : null,\n    htmlFor: htmlFor || controlId\n  }, rest, {\n    ref: ref,\n    className: classes\n  }));\n});\nFormControlLabel.displayName = 'FormControlLabel';\nFormControlLabel.propTypes = {\n  className: PropTypes.string,\n  htmlFor: PropTypes.string,\n  classPrefix: PropTypes.string\n};\nexport default FormControlLabel;","map":null,"metadata":{},"sourceType":"module"}
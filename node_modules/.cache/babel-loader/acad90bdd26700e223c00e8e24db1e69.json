{"ast":null,"code":"/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n'use strict';\n\nimport _icons from '../assets/defaultIcons';\nimport _defaultLang from '../lang/en';\nimport util from './util';\nexport default {\n  /**\r\n   * @description document create\r\n   * @param {Element} element Textarea\r\n   * @param {Object} options Options\r\n   * @returns {Object}\r\n   */\n  init: function init(element, options) {\n    if (typeof options !== 'object') options = {};\n    var doc = document;\n    /** --- init options --- */\n\n    this._initOptions(element, options); // suneditor div\n\n\n    var top_div = doc.createElement('DIV');\n    top_div.className = 'sun-editor' + (options.rtl ? ' se-rtl' : '');\n    if (element.id) top_div.id = 'suneditor_' + element.id; // relative div\n\n    var relative = doc.createElement('DIV');\n    relative.className = 'se-container'; // toolbar\n\n    var tool_bar = this._createToolBar(doc, options.buttonList, options.plugins, options);\n\n    var toolbarShadow = tool_bar.element.cloneNode(false);\n    toolbarShadow.className += ' se-toolbar-shadow';\n    tool_bar.element.style.visibility = 'hidden';\n    if (tool_bar.pluginCallButtons.math) this._checkKatexMath(options.katex);\n    var arrow = doc.createElement('DIV');\n    arrow.className = 'se-arrow'; // sticky toolbar dummy\n\n    var sticky_dummy = doc.createElement('DIV');\n    sticky_dummy.className = 'se-toolbar-sticky-dummy'; // inner editor div\n\n    var editor_div = doc.createElement('DIV');\n    editor_div.className = 'se-wrapper';\n    /** --- init elements and create bottom bar --- */\n\n    var initElements = this._initElements(options, top_div, tool_bar.element, arrow);\n\n    var bottomBar = initElements.bottomBar;\n    var wysiwyg_div = initElements.wysiwygFrame;\n    var placeholder_span = initElements.placeholder;\n    var textarea = initElements.codeView; // resizing bar\n\n    var resizing_bar = bottomBar.resizingBar;\n    var navigation = bottomBar.navigation;\n    var char_wrapper = bottomBar.charWrapper;\n    var char_counter = bottomBar.charCounter; // loading box\n\n    var loading_box = doc.createElement('DIV');\n    loading_box.className = 'se-loading-box sun-editor-common';\n    loading_box.innerHTML = '<div class=\"se-loading-effect\"></div>'; // enter line\n\n    var line_breaker = doc.createElement('DIV');\n    line_breaker.className = 'se-line-breaker';\n    line_breaker.innerHTML = '<button class=\"se-btn\">' + options.icons.line_break + '</button>';\n    var line_breaker_t = doc.createElement('DIV');\n    line_breaker_t.className += 'se-line-breaker-component';\n    var line_breaker_b = line_breaker_t.cloneNode(true);\n    line_breaker_t.innerHTML = line_breaker_b.innerHTML = options.icons.line_break; // resize operation background\n\n    var resize_back = doc.createElement('DIV');\n    resize_back.className = 'se-resizing-back'; // toolbar container\n\n    var toolbarContainer = options.toolbarContainer;\n\n    if (toolbarContainer) {\n      toolbarContainer.appendChild(tool_bar.element);\n      toolbarContainer.appendChild(toolbarShadow);\n    } // resizingbar\n\n\n    var resizingBarContainer = options.resizingBarContainer;\n    if (resizing_bar && resizingBarContainer) resizingBarContainer.appendChild(resizing_bar);\n    /** append html */\n\n    editor_div.appendChild(textarea);\n    if (placeholder_span) editor_div.appendChild(placeholder_span);\n\n    if (!toolbarContainer) {\n      relative.appendChild(tool_bar.element);\n      relative.appendChild(toolbarShadow);\n    }\n\n    relative.appendChild(sticky_dummy);\n    relative.appendChild(editor_div);\n    relative.appendChild(resize_back);\n    relative.appendChild(loading_box);\n    relative.appendChild(line_breaker);\n    relative.appendChild(line_breaker_t);\n    relative.appendChild(line_breaker_b);\n    if (resizing_bar && !resizingBarContainer) relative.appendChild(resizing_bar);\n    top_div.appendChild(relative);\n    textarea = this._checkCodeMirror(options, textarea);\n    return {\n      constructed: {\n        _top: top_div,\n        _relative: relative,\n        _toolBar: tool_bar.element,\n        _toolbarShadow: toolbarShadow,\n        _menuTray: tool_bar._menuTray,\n        _editorArea: editor_div,\n        _wysiwygArea: wysiwyg_div,\n        _codeArea: textarea,\n        _placeholder: placeholder_span,\n        _resizingBar: resizing_bar,\n        _navigation: navigation,\n        _charWrapper: char_wrapper,\n        _charCounter: char_counter,\n        _loading: loading_box,\n        _lineBreaker: line_breaker,\n        _lineBreaker_t: line_breaker_t,\n        _lineBreaker_b: line_breaker_b,\n        _resizeBack: resize_back,\n        _stickyDummy: sticky_dummy,\n        _arrow: arrow\n      },\n      options: options,\n      plugins: tool_bar.plugins,\n      pluginCallButtons: tool_bar.pluginCallButtons,\n      _responsiveButtons: tool_bar.responsiveButtons\n    };\n  },\n\n  /**\r\n   * @description Check the CodeMirror option to apply the CodeMirror and return the CodeMirror element.\r\n   * @param {Object} options options\r\n   * @param {Element} textarea textarea element\r\n   * @private\r\n   */\n  _checkCodeMirror: function _checkCodeMirror(options, textarea) {\n    if (options.codeMirror) {\n      var cmOptions = [{\n        mode: 'htmlmixed',\n        htmlMode: true,\n        lineNumbers: true,\n        lineWrapping: true\n      }, options.codeMirror.options || {}].reduce(function (init, option) {\n        for (var key in option) {\n          if (util.hasOwn(option, key)) init[key] = option[key];\n        }\n\n        return init;\n      }, {});\n\n      if (options.height === 'auto') {\n        cmOptions.viewportMargin = Infinity;\n        cmOptions.height = 'auto';\n      }\n\n      var cm = options.codeMirror.src.fromTextArea(textarea, cmOptions);\n      cm.display.wrapper.style.cssText = textarea.style.cssText;\n      options.codeMirrorEditor = cm;\n      textarea = cm.display.wrapper;\n      textarea.className += ' se-wrapper-code-mirror';\n    }\n\n    return textarea;\n  },\n\n  /**\r\n   * @description Check for a katex object.\r\n   * @param {Object} katex katex object\r\n   * @private\r\n   */\n  _checkKatexMath: function _checkKatexMath(katex) {\n    if (!katex) throw Error('[SUNEDITOR.create.fail] To use the math button you need to add a \"katex\" object to the options.');\n    var katexOptions = [{\n      throwOnError: false\n    }, katex.options || {}].reduce(function (init, option) {\n      for (var key in option) {\n        if (util.hasOwn(option, key)) init[key] = option[key];\n      }\n\n      return init;\n    }, {});\n    katex.options = katexOptions;\n  },\n\n  /**\r\n   * @description Add or reset options\r\n   * @param {Object} mergeOptions New options property\r\n   * @param {Object} context Context object of core\r\n   * @param {Object} originOptions Origin options\r\n   * @returns {Object} pluginCallButtons\r\n   * @private\r\n   */\n  _setOptions: function _setOptions(mergeOptions, context, originOptions) {\n    this._initOptions(context.element.originElement, mergeOptions);\n\n    var el = context.element;\n    var relative = el.relative;\n    var editorArea = el.editorArea;\n    var isNewToolbarContainer = mergeOptions.toolbarContainer && mergeOptions.toolbarContainer !== originOptions.toolbarContainer;\n    var isNewToolbar = mergeOptions.lang !== originOptions.lang || mergeOptions.buttonList !== originOptions.buttonList || mergeOptions.mode !== originOptions.mode || isNewToolbarContainer;\n\n    var tool_bar = this._createToolBar(document, isNewToolbar ? mergeOptions.buttonList : originOptions.buttonList, mergeOptions.plugins, mergeOptions);\n\n    if (tool_bar.pluginCallButtons.math) this._checkKatexMath(mergeOptions.katex);\n    var arrow = document.createElement('DIV');\n    arrow.className = 'se-arrow';\n\n    if (isNewToolbar) {\n      tool_bar.element.style.visibility = 'hidden'; // toolbar container\n\n      if (isNewToolbarContainer) {\n        mergeOptions.toolbarContainer.appendChild(tool_bar.element);\n        el.toolbar.parentElement.removeChild(el.toolbar);\n      } else {\n        el.toolbar.parentElement.replaceChild(tool_bar.element, el.toolbar);\n      }\n\n      el.toolbar = tool_bar.element;\n      el._menuTray = tool_bar._menuTray;\n      el._arrow = arrow;\n    }\n\n    var initElements = this._initElements(mergeOptions, el.topArea, isNewToolbar ? tool_bar.element : el.toolbar, arrow);\n\n    var bottomBar = initElements.bottomBar;\n    var wysiwygFrame = initElements.wysiwygFrame;\n    var placeholder_span = initElements.placeholder;\n    var code = initElements.codeView;\n    if (el.resizingBar) util.removeItem(el.resizingBar);\n\n    if (bottomBar.resizingBar) {\n      if (mergeOptions.resizingBarContainer && mergeOptions.resizingBarContainer !== originOptions.resizingBarContainer) {\n        mergeOptions.resizingBarContainer.appendChild(bottomBar.resizingBar);\n      } else {\n        relative.appendChild(bottomBar.resizingBar);\n      }\n    }\n\n    editorArea.innerHTML = '';\n    editorArea.appendChild(code);\n    if (placeholder_span) editorArea.appendChild(placeholder_span);\n    code = this._checkCodeMirror(mergeOptions, code);\n    el.resizingBar = bottomBar.resizingBar;\n    el.navigation = bottomBar.navigation;\n    el.charWrapper = bottomBar.charWrapper;\n    el.charCounter = bottomBar.charCounter;\n    el.wysiwygFrame = wysiwygFrame;\n    el.code = code;\n    el.placeholder = placeholder_span;\n    if (mergeOptions.rtl) util.addClass(el.topArea, 'se-rtl');else util.removeClass(el.topArea, 'se-rtl');\n    return {\n      callButtons: tool_bar.pluginCallButtons,\n      plugins: tool_bar.plugins,\n      toolbar: tool_bar\n    };\n  },\n\n  /**\r\n   * @description Initialize property of suneditor elements\r\n   * @param {Object} options Options\r\n   * @param {Element} topDiv Suneditor top div\r\n   * @param {Element} toolBar Tool bar\r\n   * @param {Element} toolBarArrow Tool bar arrow (balloon editor)\r\n   * @returns {Object} Bottom bar elements (resizingBar, navigation, charWrapper, charCounter)\r\n   * @private\r\n   */\n  _initElements: function _initElements(options, topDiv, toolBar, toolBarArrow) {\n    /** top div */\n    topDiv.style.cssText = options._editorStyles.top;\n    /** toolbar */\n\n    if (/inline/i.test(options.mode)) {\n      toolBar.className += ' se-toolbar-inline';\n      toolBar.style.width = options.toolbarWidth;\n    } else if (/balloon/i.test(options.mode)) {\n      toolBar.className += ' se-toolbar-balloon';\n      toolBar.style.width = options.toolbarWidth;\n      toolBar.appendChild(toolBarArrow);\n    }\n    /** editor */\n    // wysiwyg div or iframe\n\n\n    var wysiwygDiv = document.createElement(!options.iframe ? 'DIV' : 'IFRAME');\n    wysiwygDiv.className = 'se-wrapper-inner se-wrapper-wysiwyg';\n\n    if (!options.iframe) {\n      wysiwygDiv.setAttribute('contenteditable', true);\n      wysiwygDiv.setAttribute('scrolling', 'auto');\n\n      for (var key in options.iframeAttributes) {\n        wysiwygDiv.setAttribute(key, options.iframeAttributes[key]);\n      }\n\n      wysiwygDiv.className += ' ' + options._editableClass;\n      wysiwygDiv.style.cssText = options._editorStyles.frame + options._editorStyles.editor;\n      wysiwygDiv.className += options.className;\n    } else {\n      wysiwygDiv.allowFullscreen = true;\n      wysiwygDiv.frameBorder = 0;\n      wysiwygDiv.style.cssText = options._editorStyles.frame;\n      wysiwygDiv.className += options.className;\n    } // textarea for code view\n\n\n    var textarea = document.createElement('TEXTAREA');\n    textarea.className = 'se-wrapper-inner se-wrapper-code' + options.className;\n    textarea.style.cssText = options._editorStyles.frame;\n    textarea.style.display = 'none';\n    if (options.height === 'auto') textarea.style.overflow = 'hidden';\n    /** resize bar */\n\n    var resizingBar = null;\n    var navigation = null;\n    var charWrapper = null;\n    var charCounter = null;\n\n    if (options.resizingBar) {\n      resizingBar = document.createElement('DIV');\n      resizingBar.className = 'se-resizing-bar sun-editor-common';\n      /** navigation */\n\n      navigation = document.createElement('DIV');\n      navigation.className = 'se-navigation sun-editor-common';\n      resizingBar.appendChild(navigation);\n      /** char counter */\n\n      if (options.charCounter) {\n        charWrapper = document.createElement('DIV');\n        charWrapper.className = 'se-char-counter-wrapper';\n\n        if (options.charCounterLabel) {\n          var charLabel = document.createElement('SPAN');\n          charLabel.className = 'se-char-label';\n          charLabel.textContent = options.charCounterLabel;\n          charWrapper.appendChild(charLabel);\n        }\n\n        charCounter = document.createElement('SPAN');\n        charCounter.className = 'se-char-counter';\n        charCounter.textContent = '0';\n        charWrapper.appendChild(charCounter);\n\n        if (options.maxCharCount > 0) {\n          var char_max = document.createElement('SPAN');\n          char_max.textContent = ' / ' + options.maxCharCount;\n          charWrapper.appendChild(char_max);\n        }\n\n        resizingBar.appendChild(charWrapper);\n      }\n    }\n\n    var placeholder = null;\n\n    if (options.placeholder) {\n      placeholder = document.createElement('SPAN');\n      placeholder.className = 'se-placeholder';\n      placeholder.innerText = options.placeholder;\n    }\n\n    return {\n      bottomBar: {\n        resizingBar: resizingBar,\n        navigation: navigation,\n        charWrapper: charWrapper,\n        charCounter: charCounter\n      },\n      wysiwygFrame: wysiwygDiv,\n      codeView: textarea,\n      placeholder: placeholder\n    };\n  },\n\n  /**\r\n   * @description Initialize options\r\n   * @param {Element} element Options object\r\n   * @param {Object} options Options object\r\n   * @private\r\n   */\n  _initOptions: function _initOptions(element, options) {\n    /** Values */\n    options.lang = options.lang || _defaultLang;\n    options.value = typeof options.value === 'string' ? options.value : null;\n    options.historyStackDelayTime = typeof options.historyStackDelayTime === 'number' ? options.historyStackDelayTime : 400; // tag style\n\n    options.defaultTag = typeof options.defaultTag === 'string' && options.defaultTag.length > 0 ? options.defaultTag : 'p';\n    var textTags = options.textTags = [{\n      bold: 'STRONG',\n      underline: 'U',\n      italic: 'EM',\n      strike: 'DEL',\n      sub: 'SUB',\n      sup: 'SUP'\n    }, options.textTags || {}].reduce(function (_default, _new) {\n      for (var key in _new) {\n        _default[key] = _new[key];\n      }\n\n      return _default;\n    }, {});\n    options._textTagsMap = {\n      'strong': textTags.bold.toLowerCase(),\n      'b': textTags.bold.toLowerCase(),\n      'u': textTags.underline.toLowerCase(),\n      'ins': textTags.underline.toLowerCase(),\n      'em': textTags.italic.toLowerCase(),\n      'i': textTags.italic.toLowerCase(),\n      'del': textTags.strike.toLowerCase(),\n      'strike': textTags.strike.toLowerCase(),\n      's': textTags.strike.toLowerCase(),\n      'sub': textTags.sub.toLowerCase(),\n      'sup': textTags.sup.toLowerCase()\n    };\n    options._defaultCommand = {\n      bold: options.textTags.bold,\n      underline: options.textTags.underline,\n      italic: options.textTags.italic,\n      strike: options.textTags.strike,\n      subscript: options.textTags.sub,\n      superscript: options.textTags.sup\n    };\n    /** Whitelist, Blacklist */\n\n    var whitelist = 'br|p|div|pre|blockquote|h1|h2|h3|h4|h5|h6|ol|ul|li|hr|figure|figcaption|img|iframe|audio|video|source|table|thead|tbody|tr|th|td|a|b|strong|var|i|em|u|ins|s|span|strike|del|sub|sup|code|svg|path|details|summary'; // tags\n\n    options.tagsBlacklist = options.tagsBlacklist || '';\n    options._defaultTagsWhitelist = typeof options._defaultTagsWhitelist === 'string' ? options._defaultTagsWhitelist : whitelist;\n    options._editorTagsWhitelist = options.addTagsWhitelist === '*' ? '*' : this._setWhitelist(options._defaultTagsWhitelist + (typeof options.addTagsWhitelist === 'string' && options.addTagsWhitelist.length > 0 ? '|' + options.addTagsWhitelist : ''), options.tagsBlacklist); // paste tags\n\n    options.pasteTagsBlacklist = options.tagsBlacklist + (options.tagsBlacklist && options.pasteTagsBlacklist ? '|' + options.pasteTagsBlacklist : options.pasteTagsBlacklist || '');\n    options.pasteTagsWhitelist = options.pasteTagsWhitelist === '*' ? '*' : this._setWhitelist(typeof options.pasteTagsWhitelist === 'string' ? options.pasteTagsWhitelist : options._editorTagsWhitelist, options.pasteTagsBlacklist); // tag attributes\n\n    options.attributesWhitelist = !options.attributesWhitelist || typeof options.attributesWhitelist !== 'object' ? null : options.attributesWhitelist;\n    options.attributesBlacklist = !options.attributesBlacklist || typeof options.attributesBlacklist !== 'object' ? null : options.attributesBlacklist;\n    /** Layout */\n\n    options.mode = options.mode || 'classic'; // classic, inline, balloon, balloon-always\n\n    options.rtl = !!options.rtl;\n    options.lineAttrReset = typeof options.lineAttrReset === 'string' && options.lineAttrReset ? options.lineAttrReset === '*' ? '*' : new RegExp('^(' + options.lineAttrReset + ')$', 'i') : null;\n    options._editableClass = 'sun-editor-editable' + (options.rtl ? ' se-rtl' : '');\n    options._printClass = typeof options._printClass === 'string' ? options._printClass : null;\n    options.toolbarWidth = options.toolbarWidth ? util.isNumber(options.toolbarWidth) ? options.toolbarWidth + 'px' : options.toolbarWidth : 'auto';\n    options.toolbarContainer = typeof options.toolbarContainer === 'string' ? document.querySelector(options.toolbarContainer) : options.toolbarContainer;\n    options.stickyToolbar = /balloon/i.test(options.mode) || !!options.toolbarContainer ? -1 : options.stickyToolbar === undefined ? 0 : /^\\d+/.test(options.stickyToolbar) ? util.getNumber(options.stickyToolbar, 0) : -1;\n    options.fullScreenOffset = options.fullScreenOffset === undefined ? 0 : /^\\d+/.test(options.fullScreenOffset) ? util.getNumber(options.fullScreenOffset, 0) : 0;\n    options.fullPage = !!options.fullPage;\n    options.iframe = options.fullPage || !!options.iframe;\n    options.iframeAttributes = options.iframeAttributes || {};\n    options.iframeCSSFileName = options.iframe ? typeof options.iframeCSSFileName === 'string' ? [options.iframeCSSFileName] : options.iframeCSSFileName || ['suneditor'] : null;\n    options.previewTemplate = typeof options.previewTemplate === 'string' ? options.previewTemplate : null;\n    options.printTemplate = typeof options.printTemplate === 'string' ? options.printTemplate : null;\n    /** CodeMirror object */\n\n    options.codeMirror = options.codeMirror ? options.codeMirror.src ? options.codeMirror : {\n      src: options.codeMirror\n    } : null;\n    /** katex object (Math plugin) */\n\n    options.katex = options.katex ? options.katex.src ? options.katex : {\n      src: options.katex\n    } : null;\n    options.mathFontSize = !!options.mathFontSize ? options.mathFontSize : [{\n      text: '1',\n      value: '1em'\n    }, {\n      text: '1.5',\n      value: '1.5em'\n    }, {\n      text: '2',\n      value: '2em'\n    }, {\n      text: '2.5',\n      value: '2.5em'\n    }];\n    /** Display */\n\n    options.position = typeof options.position === 'string' ? options.position : null;\n    options.display = options.display || (element.style.display === 'none' || !element.style.display ? 'block' : element.style.display);\n    options.popupDisplay = options.popupDisplay || 'full';\n    /** Bottom resizing bar */\n\n    options.resizingBar = options.resizingBar === undefined ? /inline|balloon/i.test(options.mode) ? false : true : options.resizingBar;\n    options.showPathLabel = !options.resizingBar ? false : typeof options.showPathLabel === 'boolean' ? options.showPathLabel : true;\n    options.resizeEnable = options.resizeEnable === undefined ? true : !!options.resizeEnable;\n    options.resizingBarContainer = typeof options.resizingBarContainer === 'string' ? document.querySelector(options.resizingBarContainer) : options.resizingBarContainer;\n    /** Character count */\n\n    options.charCounter = options.maxCharCount > 0 ? true : typeof options.charCounter === 'boolean' ? options.charCounter : false;\n    options.charCounterType = typeof options.charCounterType === 'string' ? options.charCounterType : 'char';\n    options.charCounterLabel = typeof options.charCounterLabel === 'string' ? options.charCounterLabel.trim() : null;\n    options.maxCharCount = util.isNumber(options.maxCharCount) && options.maxCharCount > -1 ? options.maxCharCount * 1 : null;\n    /** Width size */\n\n    options.width = options.width ? util.isNumber(options.width) ? options.width + 'px' : options.width : element.clientWidth ? element.clientWidth + 'px' : '100%';\n    options.minWidth = (util.isNumber(options.minWidth) ? options.minWidth + 'px' : options.minWidth) || '';\n    options.maxWidth = (util.isNumber(options.maxWidth) ? options.maxWidth + 'px' : options.maxWidth) || '';\n    /** Height size */\n\n    options.height = options.height ? util.isNumber(options.height) ? options.height + 'px' : options.height : element.clientHeight ? element.clientHeight + 'px' : 'auto';\n    options.minHeight = (util.isNumber(options.minHeight) ? options.minHeight + 'px' : options.minHeight) || '';\n    options.maxHeight = (util.isNumber(options.maxHeight) ? options.maxHeight + 'px' : options.maxHeight) || '';\n    /** Editing area */\n\n    options.className = typeof options.className === 'string' && options.className.length > 0 ? ' ' + options.className : '';\n    options.defaultStyle = typeof options.defaultStyle === 'string' ? options.defaultStyle : '';\n    /** Defining menu items */\n\n    options.font = !options.font ? null : options.font;\n    options.fontSize = !options.fontSize ? null : options.fontSize;\n    options.formats = !options.formats ? null : options.formats;\n    options.colorList = !options.colorList ? null : options.colorList;\n    options.lineHeights = !options.lineHeights ? null : options.lineHeights;\n    options.paragraphStyles = !options.paragraphStyles ? null : options.paragraphStyles;\n    options.textStyles = !options.textStyles ? null : options.textStyles;\n    options.fontSizeUnit = typeof options.fontSizeUnit === 'string' ? options.fontSizeUnit.trim() || 'px' : 'px';\n    options.alignItems = typeof options.alignItems === 'object' ? options.alignItems : options.rtl ? ['right', 'center', 'left', 'justify'] : ['left', 'center', 'right', 'justify'];\n    /** Image */\n\n    options.imageResizing = options.imageResizing === undefined ? true : options.imageResizing;\n    options.imageHeightShow = options.imageHeightShow === undefined ? true : !!options.imageHeightShow;\n    options.imageAlignShow = options.imageAlignShow === undefined ? true : !!options.imageAlignShow;\n    options.imageWidth = !options.imageWidth ? 'auto' : util.isNumber(options.imageWidth) ? options.imageWidth + 'px' : options.imageWidth;\n    options.imageHeight = !options.imageHeight ? 'auto' : util.isNumber(options.imageHeight) ? options.imageHeight + 'px' : options.imageHeight;\n    options.imageSizeOnlyPercentage = !!options.imageSizeOnlyPercentage;\n    options._imageSizeUnit = options.imageSizeOnlyPercentage ? '%' : 'px';\n    options.imageRotation = options.imageRotation !== undefined ? options.imageRotation : !(options.imageSizeOnlyPercentage || !options.imageHeightShow);\n    options.imageFileInput = options.imageFileInput === undefined ? true : options.imageFileInput;\n    options.imageUrlInput = options.imageUrlInput === undefined || !options.imageFileInput ? true : options.imageUrlInput;\n    options.imageUploadHeader = options.imageUploadHeader || null;\n    options.imageUploadUrl = typeof options.imageUploadUrl === 'string' ? options.imageUploadUrl : null;\n    options.imageUploadSizeLimit = /\\d+/.test(options.imageUploadSizeLimit) ? util.getNumber(options.imageUploadSizeLimit, 0) : null;\n    options.imageMultipleFile = !!options.imageMultipleFile;\n    options.imageAccept = typeof options.imageAccept !== 'string' || options.imageAccept.trim() === \"*\" ? 'image/*' : options.imageAccept.trim() || 'image/*';\n    /** Image - image gallery */\n\n    options.imageGalleryUrl = typeof options.imageGalleryUrl === 'string' ? options.imageGalleryUrl : null;\n    options.imageGalleryHeader = options.imageGalleryHeader || null;\n    /** Video */\n\n    options.videoResizing = options.videoResizing === undefined ? true : options.videoResizing;\n    options.videoHeightShow = options.videoHeightShow === undefined ? true : !!options.videoHeightShow;\n    options.videoAlignShow = options.videoAlignShow === undefined ? true : !!options.videoAlignShow;\n    options.videoRatioShow = options.videoRatioShow === undefined ? true : !!options.videoRatioShow;\n    options.videoWidth = !options.videoWidth || !util.getNumber(options.videoWidth, 0) ? '' : util.isNumber(options.videoWidth) ? options.videoWidth + 'px' : options.videoWidth;\n    options.videoHeight = !options.videoHeight || !util.getNumber(options.videoHeight, 0) ? '' : util.isNumber(options.videoHeight) ? options.videoHeight + 'px' : options.videoHeight;\n    options.videoSizeOnlyPercentage = !!options.videoSizeOnlyPercentage;\n    options._videoSizeUnit = options.videoSizeOnlyPercentage ? '%' : 'px';\n    options.videoRotation = options.videoRotation !== undefined ? options.videoRotation : !(options.videoSizeOnlyPercentage || !options.videoHeightShow);\n    options.videoRatio = util.getNumber(options.videoRatio, 4) || 0.5625;\n    options.videoRatioList = !options.videoRatioList ? null : options.videoRatioList;\n    options.youtubeQuery = (options.youtubeQuery || '').replace('?', '');\n    options.videoFileInput = !!options.videoFileInput;\n    options.videoUrlInput = options.videoUrlInput === undefined || !options.videoFileInput ? true : options.videoUrlInput;\n    options.videoUploadHeader = options.videoUploadHeader || null;\n    options.videoUploadUrl = typeof options.videoUploadUrl === 'string' ? options.videoUploadUrl : null;\n    options.videoUploadSizeLimit = /\\d+/.test(options.videoUploadSizeLimit) ? util.getNumber(options.videoUploadSizeLimit, 0) : null;\n    options.videoMultipleFile = !!options.videoMultipleFile;\n    options.videoTagAttrs = options.videoTagAttrs || null;\n    options.videoIframeAttrs = options.videoIframeAttrs || null;\n    options.videoAccept = typeof options.videoAccept !== 'string' || options.videoAccept.trim() === \"*\" ? 'video/*' : options.videoAccept.trim() || 'video/*';\n    /** Audio */\n\n    options.audioWidth = !options.audioWidth ? '' : util.isNumber(options.audioWidth) ? options.audioWidth + 'px' : options.audioWidth;\n    options.audioHeight = !options.audioHeight ? '' : util.isNumber(options.audioHeight) ? options.audioHeight + 'px' : options.audioHeight;\n    options.audioFileInput = !!options.audioFileInput;\n    options.audioUrlInput = options.audioUrlInput === undefined || !options.audioFileInput ? true : options.audioUrlInput;\n    options.audioUploadHeader = options.audioUploadHeader || null;\n    options.audioUploadUrl = typeof options.audioUploadUrl === 'string' ? options.audioUploadUrl : null;\n    options.audioUploadSizeLimit = /\\d+/.test(options.audioUploadSizeLimit) ? util.getNumber(options.audioUploadSizeLimit, 0) : null;\n    options.audioMultipleFile = !!options.audioMultipleFile;\n    options.audioTagAttrs = options.audioTagAttrs || null;\n    options.audioAccept = typeof options.audioAccept !== 'string' || options.audioAccept.trim() === \"*\" ? 'audio/*' : options.audioAccept.trim() || 'audio/*';\n    /** Table */\n\n    options.tableCellControllerPosition = typeof options.tableCellControllerPosition === 'string' ? options.tableCellControllerPosition.toLowerCase() : 'cell';\n    /** Link */\n\n    options.linkTargetNewWindow = !!options.linkTargetNewWindow;\n    options.linkProtocol = typeof options.linkProtocol === 'string' ? options.linkProtocol : null;\n    options.linkRel = Array.isArray(options.linkRel) ? options.linkRel : [];\n    options.linkRelDefault = options.linkRelDefault || {};\n    /** HR */\n    // options.hrItems = options.hrItems;\n\n    /** Key actions */\n\n    options.tabDisable = !!options.tabDisable;\n    options.shortcutsDisable = Array.isArray(options.shortcutsDisable) ? options.shortcutsDisable : [];\n    options.shortcutsHint = options.shortcutsHint === undefined ? true : !!options.shortcutsHint;\n    /** Defining save button */\n\n    options.callBackSave = !options.callBackSave ? null : options.callBackSave;\n    /** Templates Array */\n\n    options.templates = !options.templates ? null : options.templates;\n    /** ETC */\n\n    options.placeholder = typeof options.placeholder === 'string' ? options.placeholder : null;\n    options.mediaAutoSelect = options.mediaAutoSelect === undefined ? true : !!options.mediaAutoSelect;\n    /** Buttons */\n\n    options.buttonList = !!options.buttonList ? options.buttonList : [['undo', 'redo'], ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'], ['removeFormat'], ['outdent', 'indent'], ['fullScreen', 'showBlocks', 'codeView'], ['preview', 'print']];\n    /** RTL - buttons */\n\n    if (options.rtl) {\n      options.buttonList = options.buttonList.reverse();\n    }\n    /** --- Define icons --- */\n    // custom icons\n\n\n    options.icons = !options.icons || typeof options.icons !== 'object' ? _icons : [_icons, options.icons].reduce(function (_default, _new) {\n      for (var key in _new) {\n        if (util.hasOwn(_new, key)) _default[key] = _new[key];\n      }\n\n      return _default;\n    }, {}); // rtl icons\n\n    options.icons = !options.rtl ? options.icons : [options.icons, options.icons.rtl].reduce(function (_default, _new) {\n      for (var key in _new) {\n        if (util.hasOwn(_new, key)) _default[key] = _new[key];\n      }\n\n      return _default;\n    }, {});\n    /** Private options */\n    // options.__defaultFontSize;\n\n    options.__listCommonStyle = options.__listCommonStyle || ['fontSize', 'color', 'fontFamily', 'fontWeight', 'fontStyle'];\n    /** _init options */\n\n    options._editorStyles = util._setDefaultOptionStyle(options, options.defaultStyle);\n  },\n  _setWhitelist: function _setWhitelist(whitelist, blacklist) {\n    if (typeof blacklist !== 'string') return whitelist;\n    blacklist = blacklist.split('|');\n    whitelist = whitelist.split('|');\n\n    for (var i = 0, len = blacklist.length, index; i < len; i++) {\n      index = whitelist.indexOf(blacklist[i]);\n      if (index > -1) whitelist.splice(index, 1);\n    }\n\n    return whitelist.join('|');\n  },\n\n  /**\r\n   * @description Suneditor's Default button list\r\n   * @param {Object} options options\r\n   * @private\r\n   */\n  _defaultButtons: function _defaultButtons(options) {\n    var icons = options.icons;\n    var lang = options.lang;\n    var cmd = util.isOSX_IOS ? '⌘' : 'CTRL';\n    var addShift = util.isOSX_IOS ? '⇧' : '+SHIFT';\n    var shortcutsDisable = !options.shortcutsHint ? ['bold', 'strike', 'underline', 'italic', 'undo', 'indent', 'save'] : options.shortcutsDisable;\n    var indentKey = options.rtl ? ['[', ']'] : [']', '['];\n    var indentIcon = options.rtl ? [icons.outdent, icons.indent] : [icons.indent, icons.outdent];\n    return {\n      /** default command */\n      bold: ['', lang.toolbar.bold + '<span class=\"se-shortcut\">' + (shortcutsDisable.indexOf('bold') > -1 ? '' : cmd + '+<span class=\"se-shortcut-key\">B</span>') + '</span>', 'bold', '', icons.bold],\n      underline: ['', lang.toolbar.underline + '<span class=\"se-shortcut\">' + (shortcutsDisable.indexOf('underline') > -1 ? '' : cmd + '+<span class=\"se-shortcut-key\">U</span>') + '</span>', 'underline', '', icons.underline],\n      italic: ['', lang.toolbar.italic + '<span class=\"se-shortcut\">' + (shortcutsDisable.indexOf('italic') > -1 ? '' : cmd + '+<span class=\"se-shortcut-key\">I</span>') + '</span>', 'italic', '', icons.italic],\n      strike: ['', lang.toolbar.strike + '<span class=\"se-shortcut\">' + (shortcutsDisable.indexOf('strike') > -1 ? '' : cmd + addShift + '+<span class=\"se-shortcut-key\">S</span>') + '</span>', 'strike', '', icons.strike],\n      subscript: ['', lang.toolbar.subscript, 'SUB', '', icons.subscript],\n      superscript: ['', lang.toolbar.superscript, 'SUP', '', icons.superscript],\n      removeFormat: ['', lang.toolbar.removeFormat, 'removeFormat', '', icons.erase],\n      indent: ['', lang.toolbar.indent + '<span class=\"se-shortcut\">' + (shortcutsDisable.indexOf('indent') > -1 ? '' : cmd + '+<span class=\"se-shortcut-key\">' + indentKey[0] + '</span>') + '</span>', 'indent', '', indentIcon[0]],\n      outdent: ['', lang.toolbar.outdent + '<span class=\"se-shortcut\">' + (shortcutsDisable.indexOf('indent') > -1 ? '' : cmd + '+<span class=\"se-shortcut-key\">' + indentKey[1] + '</span>') + '</span>', 'outdent', '', indentIcon[1]],\n      fullScreen: ['se-code-view-enabled se-resizing-enabled', lang.toolbar.fullScreen, 'fullScreen', '', icons.expansion],\n      showBlocks: ['', lang.toolbar.showBlocks, 'showBlocks', '', icons.show_blocks],\n      codeView: ['se-code-view-enabled se-resizing-enabled', lang.toolbar.codeView, 'codeView', '', icons.code_view],\n      undo: ['', lang.toolbar.undo + '<span class=\"se-shortcut\">' + (shortcutsDisable.indexOf('undo') > -1 ? '' : cmd + '+<span class=\"se-shortcut-key\">Z</span>') + '</span>', 'undo', '', icons.undo],\n      redo: ['', lang.toolbar.redo + '<span class=\"se-shortcut\">' + (shortcutsDisable.indexOf('undo') > -1 ? '' : cmd + '+<span class=\"se-shortcut-key\">Y</span> / ' + cmd + addShift + '+<span class=\"se-shortcut-key\">Z</span>') + '</span>', 'redo', '', icons.redo],\n      preview: ['se-resizing-enabled', lang.toolbar.preview, 'preview', '', icons.preview],\n      print: ['se-resizing-enabled', lang.toolbar.print, 'print', '', icons.print],\n      dir: ['', lang.toolbar[options.rtl ? 'dir_ltr' : 'dir_rtl'], 'dir', '', icons[options.rtl ? 'dir_ltr' : 'dir_rtl']],\n      dir_ltr: ['', lang.toolbar.dir_ltr, 'dir_ltr', '', icons.dir_ltr],\n      dir_rtl: ['', lang.toolbar.dir_rtl, 'dir_rtl', '', icons.dir_rtl],\n      save: ['se-resizing-enabled', lang.toolbar.save + '<span class=\"se-shortcut\">' + (shortcutsDisable.indexOf('save') > -1 ? '' : cmd + '+<span class=\"se-shortcut-key\">S</span>') + '</span>', 'save', '', icons.save],\n\n      /** plugins - command */\n      blockquote: ['', lang.toolbar.tag_blockquote, 'blockquote', 'command', icons.blockquote],\n\n      /** plugins - submenu */\n      font: ['se-btn-select se-btn-tool-font', lang.toolbar.font, 'font', 'submenu', '<span class=\"txt\">' + lang.toolbar.font + '</span>' + icons.arrow_down],\n      formatBlock: ['se-btn-select se-btn-tool-format', lang.toolbar.formats, 'formatBlock', 'submenu', '<span class=\"txt\">' + lang.toolbar.formats + '</span>' + icons.arrow_down],\n      fontSize: ['se-btn-select se-btn-tool-size', lang.toolbar.fontSize, 'fontSize', 'submenu', '<span class=\"txt\">' + lang.toolbar.fontSize + '</span>' + icons.arrow_down],\n      fontColor: ['', lang.toolbar.fontColor, 'fontColor', 'submenu', icons.font_color],\n      hiliteColor: ['', lang.toolbar.hiliteColor, 'hiliteColor', 'submenu', icons.highlight_color],\n      align: ['se-btn-align', lang.toolbar.align, 'align', 'submenu', options.rtl ? icons.align_right : icons.align_left],\n      list: ['', lang.toolbar.list, 'list', 'submenu', icons.list_number],\n      horizontalRule: ['btn_line', lang.toolbar.horizontalRule, 'horizontalRule', 'submenu', icons.horizontal_rule],\n      table: ['', lang.toolbar.table, 'table', 'submenu', icons.table],\n      lineHeight: ['', lang.toolbar.lineHeight, 'lineHeight', 'submenu', icons.line_height],\n      template: ['', lang.toolbar.template, 'template', 'submenu', icons.template],\n      paragraphStyle: ['', lang.toolbar.paragraphStyle, 'paragraphStyle', 'submenu', icons.paragraph_style],\n      textStyle: ['', lang.toolbar.textStyle, 'textStyle', 'submenu', icons.text_style],\n\n      /** plugins - dialog */\n      link: ['', lang.toolbar.link, 'link', 'dialog', icons.link],\n      image: ['', lang.toolbar.image, 'image', 'dialog', icons.image],\n      video: ['', lang.toolbar.video, 'video', 'dialog', icons.video],\n      audio: ['', lang.toolbar.audio, 'audio', 'dialog', icons.audio],\n      math: ['', lang.toolbar.math, 'math', 'dialog', icons.math],\n\n      /** plugins - fileBrowser */\n      imageGallery: ['', lang.toolbar.imageGallery, 'imageGallery', 'fileBrowser', icons.image_gallery]\n    };\n  },\n\n  /**\r\n   * @description Create a group div containing each module\r\n   * @returns {Object}\r\n   * @private\r\n   */\n  _createModuleGroup: function _createModuleGroup() {\n    var oDiv = util.createElement('DIV');\n    oDiv.className = 'se-btn-module se-btn-module-border';\n    var oUl = util.createElement('UL');\n    oUl.className = 'se-menu-list';\n    oDiv.appendChild(oUl);\n    return {\n      'div': oDiv,\n      'ul': oUl\n    };\n  },\n\n  /**\r\n   * @description Create a button element\r\n   * @param {string} buttonClass className in button\r\n   * @param {string} title Title in button\r\n   * @param {string} dataCommand The data-command property of the button\r\n   * @param {string} dataDisplay The data-display property of the button ('dialog', 'submenu', 'command')\r\n   * @param {string} innerHTML Html in button\r\n   * @param {string} _disabled Button disabled\r\n   * @param {Object} _icons Icons\r\n   * @returns {Object}\r\n   * @private\r\n   */\n  _createButton: function _createButton(buttonClass, title, dataCommand, dataDisplay, innerHTML, _disabled, _icons) {\n    var oLi = util.createElement('LI');\n    var oButton = util.createElement('BUTTON');\n    var label = title || dataCommand;\n    oButton.setAttribute('type', 'button');\n    oButton.setAttribute('class', 'se-btn' + (buttonClass ? ' ' + buttonClass : '') + ' se-tooltip');\n    oButton.setAttribute('data-command', dataCommand);\n    oButton.setAttribute('data-display', dataDisplay);\n    oButton.setAttribute('aria-label', label.replace(/<span .+<\\/span>/, ''));\n    oButton.setAttribute('tabindex', '-1');\n    if (!innerHTML) innerHTML = '<span class=\"se-icon-text\">!</span>';\n\n    if (/^default\\./i.test(innerHTML)) {\n      innerHTML = _icons[innerHTML.replace(/^default\\./i, '')];\n    }\n\n    if (/^text\\./i.test(innerHTML)) {\n      innerHTML = innerHTML.replace(/^text\\./i, '');\n      oButton.className += ' se-btn-more-text';\n    }\n\n    innerHTML += '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + label + '</span></span>';\n    if (_disabled) oButton.setAttribute('disabled', true);\n    oButton.innerHTML = innerHTML;\n    oLi.appendChild(oButton);\n    return {\n      'li': oLi,\n      'button': oButton\n    };\n  },\n\n  /**\r\n   * @description Create editor HTML\r\n   * @param {Array} doc document object\r\n   * @param {Array} buttonList option.buttonList\r\n   * @param {Array|Object|null} _plugins Plugins\r\n   * @param {Array} options options\r\n   * @returns {Object} { element: (Element) Toolbar element, plugins: (Array|null) Plugins Array, pluginCallButtons: (Object), responsiveButtons: (Array) }\r\n   * @private\r\n   */\n  _createToolBar: function _createToolBar(doc, buttonList, _plugins, options) {\n    var separator_vertical = doc.createElement('DIV');\n    separator_vertical.className = 'se-toolbar-separator-vertical';\n    var tool_bar = doc.createElement('DIV');\n    tool_bar.className = 'se-toolbar sun-editor-common';\n\n    var _buttonTray = doc.createElement('DIV');\n\n    _buttonTray.className = 'se-btn-tray';\n    tool_bar.appendChild(_buttonTray);\n    /** create button list */\n\n    buttonList = JSON.parse(JSON.stringify(buttonList));\n    var icons = options.icons;\n\n    var defaultButtonList = this._defaultButtons(options);\n\n    var pluginCallButtons = {};\n    var responsiveButtons = [];\n    var plugins = {};\n\n    if (_plugins) {\n      var pluginsValues = _plugins.length ? _plugins : Object.keys(_plugins).map(function (name) {\n        return _plugins[name];\n      });\n\n      for (var i = 0, len = pluginsValues.length, p; i < len; i++) {\n        p = pluginsValues[i].default || pluginsValues[i];\n        plugins[p.name] = p;\n      }\n    }\n\n    var module = null;\n    var button = null;\n    var moduleElement = null;\n    var buttonElement = null;\n    var pluginName = '';\n    var vertical = false;\n    var moreLayer = util.createElement('DIV');\n    moreLayer.className = 'se-toolbar-more-layer';\n\n    buttonGroupLoop: for (var _i = 0, more, moreContainer, moreCommand, buttonGroup, align; _i < buttonList.length; _i++) {\n      more = false;\n      align = '';\n      buttonGroup = buttonList[_i];\n      moduleElement = this._createModuleGroup(); // button object\n\n      if (typeof buttonGroup === 'object') {\n        // buttons loop\n        for (var j = 0, moreButton; j < buttonGroup.length; j++) {\n          button = buttonGroup[j];\n          moreButton = false;\n\n          if (/^\\%\\d+/.test(button) && j === 0) {\n            buttonGroup[0] = button.replace(/[^\\d]/g, '');\n            responsiveButtons.push(buttonGroup);\n            buttonList.splice(_i--, 1);\n            continue buttonGroupLoop;\n          }\n\n          if (typeof button === 'object') {\n            if (typeof button.add === 'function') {\n              pluginName = button.name;\n              module = defaultButtonList[pluginName];\n              plugins[pluginName] = button;\n            } else {\n              pluginName = button.name;\n              module = [button.buttonClass, button.title, button.name, button.dataDisplay, button.innerHTML, button._disabled];\n            }\n          } else {\n            // align\n            if (/^\\-/.test(button)) {\n              align = button.substr(1);\n              moduleElement.div.className += ' module-float-' + align;\n              continue;\n            } // rtl fix\n\n\n            if (/^\\#/.test(button)) {\n              var option = button.substr(1);\n              if (option === 'fix') moduleElement.ul.className += ' se-menu-dir-fix';\n              continue;\n            } // more button\n\n\n            if (/^\\:/.test(button)) {\n              moreButton = true;\n              var matched = button.match(/^\\:([^\\-]+)\\-([^\\-]+)\\-([^\\-]+)/);\n              moreCommand = '__se__' + matched[1].trim();\n              var title = matched[2].trim();\n              var innerHTML = matched[3].trim();\n              module = ['se-btn-more', title, moreCommand, 'MORE', innerHTML];\n            } // buttons\n            else {\n              module = defaultButtonList[button];\n            }\n\n            pluginName = button;\n\n            if (!module) {\n              var custom = plugins[pluginName];\n              if (!custom) throw Error('[SUNEDITOR.create.toolbar.fail] The button name of a plugin that does not exist. [' + pluginName + ']');\n              module = [custom.buttonClass, custom.title, custom.name, custom.display, custom.innerHTML, custom._disabled];\n            }\n          }\n\n          buttonElement = this._createButton(module[0], module[1], module[2], module[3], module[4], module[5], icons);\n          (more ? moreContainer : moduleElement.ul).appendChild(buttonElement.li);\n\n          if (plugins[pluginName]) {\n            pluginCallButtons[pluginName] = buttonElement.button;\n          } // more button\n\n\n          if (moreButton) {\n            more = true;\n            moreContainer = util.createElement('DIV');\n            moreContainer.className = 'se-more-layer ' + moreCommand;\n            moreContainer.innerHTML = '<div class=\"se-more-form\"><ul class=\"se-menu-list\"' + (align ? ' style=\"float: ' + align + ';\"' : '') + '></ul></div>';\n            moreLayer.appendChild(moreContainer);\n            moreContainer = moreContainer.firstElementChild.firstElementChild;\n          }\n        }\n\n        if (vertical) {\n          var sv = separator_vertical.cloneNode(false);\n\n          _buttonTray.appendChild(sv);\n        }\n\n        _buttonTray.appendChild(moduleElement.div);\n\n        vertical = true;\n      }\n      /** line break  */\n      else if (/^\\/$/.test(buttonGroup)) {\n        var enterDiv = doc.createElement('DIV');\n        enterDiv.className = 'se-btn-module-enter';\n\n        _buttonTray.appendChild(enterDiv);\n\n        vertical = false;\n      }\n    }\n\n    switch (_buttonTray.children.length) {\n      case 0:\n        _buttonTray.style.display = 'none';\n        break;\n\n      case 1:\n        util.removeClass(_buttonTray.firstElementChild, 'se-btn-module-border');\n        break;\n\n      default:\n        if (options.rtl) {\n          var _sv = separator_vertical.cloneNode(false);\n\n          _sv.style.float = _buttonTray.lastElementChild.style.float;\n\n          _buttonTray.appendChild(_sv);\n        }\n\n    }\n\n    if (responsiveButtons.length > 0) responsiveButtons.unshift(buttonList);\n    if (moreLayer.children.length > 0) _buttonTray.appendChild(moreLayer); // menu tray\n\n    var _menuTray = doc.createElement('DIV');\n\n    _menuTray.className = 'se-menu-tray';\n    tool_bar.appendChild(_menuTray); // cover\n\n    var tool_cover = doc.createElement('DIV');\n    tool_cover.className = 'se-toolbar-cover';\n    tool_bar.appendChild(tool_cover);\n    return {\n      'element': tool_bar,\n      'plugins': plugins,\n      'pluginCallButtons': pluginCallButtons,\n      'responsiveButtons': responsiveButtons,\n      '_menuTray': _menuTray,\n      '_buttonTray': _buttonTray\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from '../utils';\nvar Tooltip = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'tooltip' : _props$classPrefix,\n      children = props.children,\n      style = props.style,\n      visible = props.visible,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"className\", \"classPrefix\", \"children\", \"style\", \"visible\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix;\n\n  var classes = merge(className, withClassPrefix());\n\n  var styles = _extends({\n    opacity: visible ? 1 : undefined\n  }, style);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"tooltip\"\n  }, rest, {\n    ref: ref,\n    className: classes,\n    style: styles\n  }), children);\n});\nTooltip.displayName = 'Tooltip';\nTooltip.propTypes = {\n  visible: PropTypes.bool,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.node\n};\nexport default Tooltip;","map":null,"metadata":{},"sourceType":"module"}
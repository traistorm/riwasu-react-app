{"ast":null,"code":"import _classCallCheck from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/eventinfo\n */\nimport spy from './spy';\n/**\n * The event object passed to event callbacks. It is used to provide information about the event as well as a tool to\n * manipulate it.\n */\n\nvar EventInfo =\n/**\n * @param {Object} source The emitter.\n * @param {String} name The event name.\n */\nfunction EventInfo(source, name) {\n  _classCallCheck(this, EventInfo);\n\n  /**\n   * The object that fired the event.\n   *\n   * @readonly\n   * @member {Object}\n   */\n  this.source = source;\n  /**\n   * The event name.\n   *\n   * @readonly\n   * @member {String}\n   */\n\n  this.name = name;\n  /**\n   * Path this event has followed. See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n   *\n   * @readonly\n   * @member {Array.<Object>}\n   */\n\n  this.path = []; // The following methods are defined in the constructor because they must be re-created per instance.\n\n  /**\n   * Stops the event emitter to call further callbacks for this event interaction.\n   *\n   * @method #stop\n   */\n\n  this.stop = spy();\n  /**\n   * Removes the current callback from future interactions of this event.\n   *\n   * @method #off\n   */\n\n  this.off = spy();\n  /**\n   * The value which will be returned by {@link module:utils/emittermixin~EmitterMixin#fire}.\n   *\n   * It's `undefined` by default and can be changed by an event listener:\n   *\n   *\t\tdataController.fire( 'getSelectedContent', ( evt ) => {\n   *\t\t\t// This listener will make `dataController.fire( 'getSelectedContent' )`\n   *\t\t\t// always return an empty DocumentFragment.\n   *\t\t\tevt.return = new DocumentFragment();\n   *\n   *\t\t\t// Make sure no other listeners are executed.\n   *\t\t\tevt.stop();\n   *\t\t} );\n   *\n   * @member #return\n   */\n};\n\nexport { EventInfo as default };","map":null,"metadata":{},"sourceType":"module"}
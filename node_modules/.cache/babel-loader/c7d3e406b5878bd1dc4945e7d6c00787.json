{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction invertNumber(min, max, num) {\n  return max + min - num;\n}\n\nfunction convertRange(oldMin, oldMax, newMin, newMax, oldValue) {\n  var percent = (oldValue - oldMin) / (oldMax - oldMin);\n  var result = percent * (newMax - newMin) + newMin;\n  return result || 0;\n}\n\nfunction convertWidthToPx(width, containerWidth) {\n  if (typeof width === \"number\") {\n    return width;\n  }\n\n  if (typeof width !== \"string\") {\n    throw new Error(\"Received: \".concat(width, \" - Size must be a number or string\"));\n  }\n\n  if (width.substr(-1) === \"%\") {\n    var percent = 100 / Number(width.slice(0, -1));\n    return containerWidth / percent;\n  }\n\n  if (width.substr(-2) === \"px\") {\n    return Number(width.slice(0, -2));\n  }\n\n  return Number(width);\n}\n\nfunction convertWidthToString(width) {\n  if (typeof width === \"number\") {\n    return width + \"px\";\n  }\n\n  return width;\n}\n\nfunction noop() {}\n\nvar _default = {\n  invertNumber: invertNumber,\n  convertRange: convertRange,\n  convertWidthToPx: convertWidthToPx,\n  convertWidthToString: convertWidthToString,\n  noop: noop\n};\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Tooltip';\nimport Whisper from '../Whisper';\nimport { useClassNames } from '../utils';\nimport { FormGroupContext } from '../FormGroup/FormGroup';\nimport HelpO from '@rsuite/icons/legacy/HelpO';\nvar FormHelpText = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'span' : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'form-help-text' : _props$classPrefix,\n      className = props.className,\n      tooltip = props.tooltip,\n      children = props.children,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"className\", \"tooltip\", \"children\"]);\n\n  var _useContext = useContext(FormGroupContext),\n      controlId = _useContext.controlId;\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge;\n\n  var classes = merge(className, withClassPrefix({\n    tooltip: tooltip\n  }));\n\n  if (tooltip) {\n    return /*#__PURE__*/React.createElement(Whisper, {\n      ref: ref,\n      placement: \"topEnd\",\n      speaker: /*#__PURE__*/React.createElement(Tooltip, rest, children)\n    }, /*#__PURE__*/React.createElement(Component, {\n      className: classes\n    }, /*#__PURE__*/React.createElement(HelpO, null)));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    id: controlId ? controlId + \"-help-text\" : null\n  }, rest, {\n    ref: ref,\n    className: classes\n  }), children);\n});\nFormHelpText.displayName = 'FormHelpText';\nFormHelpText.propTypes = {\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  children: PropTypes.node,\n  classPrefix: PropTypes.string\n};\nexport default FormHelpText;","map":null,"metadata":{},"sourceType":"module"}
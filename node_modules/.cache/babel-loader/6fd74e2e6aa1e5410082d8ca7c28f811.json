{"ast":null,"code":"import _classCallCheck from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/arrowkeysobserver\n */\nimport Observer from './observer';\nimport BubblingEventInfo from './bubblingeventinfo';\nimport { isArrowKeyCode } from '@ckeditor/ckeditor5-utils';\n/**\n * Arrow keys observer introduces the {@link module:engine/view/document~Document#event:arrowKey `Document#arrowKey`} event.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar ArrowKeysObserver = /*#__PURE__*/function (_Observer) {\n  _inherits(ArrowKeysObserver, _Observer);\n\n  /**\n   * @inheritDoc\n   */\n  function ArrowKeysObserver(view) {\n    var _this;\n\n    _classCallCheck(this, ArrowKeysObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ArrowKeysObserver).call(this, view));\n\n    _this.document.on('keydown', function (event, data) {\n      if (_this.isEnabled && isArrowKeyCode(data.keyCode)) {\n        var eventInfo = new BubblingEventInfo(_this.document, 'arrowKey', _this.document.selection.getFirstRange());\n\n        _this.document.fire(eventInfo, data);\n\n        if (eventInfo.stop.called) {\n          event.stop();\n        }\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ArrowKeysObserver, [{\n    key: \"observe\",\n    value: function observe() {}\n  }]);\n\n  return ArrowKeysObserver;\n}(Observer);\n/**\n * Event fired when the user presses an arrow keys.\n *\n * Introduced by {@link module:engine/view/observer/arrowkeysobserver~ArrowKeysObserver}.\n *\n * Note that because {@link module:engine/view/observer/arrowkeysobserver~ArrowKeysObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @event module:engine/view/document~Document#event:arrowKey\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n */\n\n\nexport { ArrowKeysObserver as default };","map":null,"metadata":{},"sourceType":"module"}
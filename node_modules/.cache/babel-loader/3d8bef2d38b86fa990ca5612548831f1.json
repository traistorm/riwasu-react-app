{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _utils = _interopRequireDefault(require(\"./utils\"));\n\nvar _Image = _interopRequireDefault(require(\"./Image\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar GlassRenderer = function GlassRenderer(props) {\n  var itemRef = props.itemRef,\n      itemPosition = props.itemPosition,\n      activePosition = props.activePosition,\n      elementDimensions = props.elementDimensions,\n      itemDimensions = props.itemDimensions,\n      active = props.active,\n      imageSrc = props.imageSrc,\n      largeImageSrc = props.largeImageSrc,\n      imageAlt = props.imageAlt,\n      magnifierBorderSize = props.magnifierBorderSize,\n      magnifierBorderColor = props.magnifierBorderColor,\n      magnifierBackgroundColor = props.magnifierBackgroundColor,\n      square = props.square,\n      magnifierSize = props.magnifierSize,\n      magnifierOffsetX = props.magnifierOffsetX,\n      magnifierOffsetY = props.magnifierOffsetY,\n      renderOverlay = props.renderOverlay,\n      cursorStyle = props.cursorStyle,\n      onImageLoad = props.onImageLoad,\n      onLargeImageLoad = props.onLargeImageLoad,\n      onLoadRefresh = props.onLoadRefresh;\n  var legalSize = itemDimensions.width > elementDimensions.width;\n  var isActive = legalSize && active;\n\n  var magnifierSizeNum = _utils[\"default\"].convertWidthToPx(magnifierSize, elementDimensions.width);\n\n  var positionOffset = magnifierSizeNum / 2;\n  var position = {\n    x: itemPosition.x - activePosition.x + positionOffset - magnifierBorderSize,\n    y: itemPosition.y - activePosition.y + positionOffset - magnifierBorderSize\n  };\n  var divPosition = {\n    x: activePosition.x - positionOffset + magnifierOffsetX,\n    y: activePosition.y - positionOffset + magnifierOffsetY\n  };\n  var borderRadius = square ? \"0\" : \"50%\";\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Image[\"default\"], {\n    style: {\n      width: \"100%\",\n      display: \"block\",\n      boxSizing: \"border-box\",\n      cursor: legalSize ? cursorStyle : \"default\"\n    },\n    src: imageSrc,\n    alt: imageAlt,\n    onImageLoad: onImageLoad,\n    onLoadRefresh: onLoadRefresh\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: _objectSpread(_objectSpread({}, _styles[\"default\"].getZoomContainerStyle(magnifierSizeNum, magnifierSizeNum, true)), {}, {\n      visibility: !isActive ? \"hidden\" : \"visible\",\n      borderRadius: borderRadius,\n      zIndex: \"1\",\n      border: \"\".concat(magnifierBorderSize, \"px solid \").concat(magnifierBorderColor),\n      transform: \"translate(\".concat(divPosition.x, \"px, \").concat(divPosition.y, \"px)\"),\n      backgroundColor: magnifierBackgroundColor,\n      backgroundClip: \"padding-box\"\n    })\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Image[\"default\"], {\n    style: _styles[\"default\"].getLargeImageStyle(position.x, position.y, isActive),\n    ref: itemRef,\n    src: largeImageSrc || imageSrc,\n    alt: imageAlt,\n    onImageLoad: onLargeImageLoad,\n    onLoadRefresh: onLoadRefresh\n  })), renderOverlay ? renderOverlay(active) : null);\n};\n\nvar _default = GlassRenderer;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}
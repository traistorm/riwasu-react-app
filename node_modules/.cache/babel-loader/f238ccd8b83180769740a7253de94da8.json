{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useCallback, useState } from 'react';\nimport { setTimingMargin } from '../DateRangePicker/utils';\nimport { subDays } from '../utils/dateUtils';\nimport { CalendarState } from '../Calendar';\nexport function getDefaultRanges(date) {\n  var todayDate = new Date();\n  /**\n   * Is Date[] type\n   * If it is an array type, it returns the default shortcut key suitable for DateRangePicker Toolbar,\n   * otherwise it returns the default shortcut key suitable for DatePicker Toolbar\n   */\n\n  var isRange = date instanceof Array;\n  var rangeKeys = ['today', 'yesterday'];\n\n  function rangeIterator(label) {\n    var defaultRange = {\n      today: isRange ? {\n        value: [setTimingMargin(todayDate), setTimingMargin(todayDate, 'right')]\n      } : {\n        closeOverlay: true,\n        value: todayDate\n      },\n      yesterday: isRange ? {\n        value: [setTimingMargin(subDays(todayDate, 1)), setTimingMargin(subDays(todayDate, 1), 'right')]\n      } : {\n        closeOverlay: true,\n        value: subDays(todayDate, 1)\n      },\n      last7Days: {\n        value: [setTimingMargin(subDays(todayDate, 6)), setTimingMargin(todayDate, 'right')]\n      }\n    };\n    return _extends({\n      label: label\n    }, defaultRange[label]);\n  }\n\n  isRange && rangeKeys.push('last7Days');\n  return rangeKeys.map(rangeIterator);\n}\n\nvar generateRangesIterator = function generateRangesIterator(_ref) {\n  var calendarDate = _ref.calendarDate;\n  return function (_ref2) {\n    var value = _ref2.value,\n        rest = _objectWithoutPropertiesLoose(_ref2, [\"value\"]);\n\n    value = typeof value === 'function' ? value(calendarDate) : value;\n    return _extends({\n      value: value\n    }, rest);\n  };\n};\n/**\n * get Toolbar ranges from Toolbar props\n * @param ranges\n * @param calendarDate\n */\n\n\nexport var getRanges = function getRanges(_ref3) {\n  var ranges = _ref3.ranges,\n      calendarDate = _ref3.calendarDate;\n  return typeof ranges === 'undefined' ? getDefaultRanges(calendarDate) : ranges.map(generateRangesIterator({\n    calendarDate: calendarDate\n  }));\n};\nexport var useCalendarState = function useCalendarState() {\n  var _useState = useState(),\n      calendarState = _useState[0],\n      setCalendarState = _useState[1];\n\n  var reset = useCallback(function () {\n    setCalendarState(undefined);\n  }, []);\n  var openMonth = useCallback(function () {\n    setCalendarState(CalendarState.DROP_MONTH);\n  }, []);\n  var openTime = useCallback(function () {\n    setCalendarState(CalendarState.DROP_TIME);\n  }, []);\n  return {\n    calendarState: calendarState,\n    reset: reset,\n    openMonth: openMonth,\n    openTime: openTime\n  };\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useContext, useEffect, useRef } from 'react';\nimport { mergeRefs, useClassNames } from '../utils';\nimport ListContext from './ListContext';\nvar ListItem = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      children = props.children,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'list-item' : _props$classPrefix,\n      _props$collection = props.collection,\n      collection = _props$collection === void 0 ? 0 : _props$collection,\n      disabled = props.disabled,\n      index = props.index,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"children\", \"className\", \"classPrefix\", \"collection\", \"disabled\", \"index\"]);\n\n  var _useContext = useContext(ListContext),\n      bordered = _useContext.bordered,\n      register = _useContext.register,\n      size = _useContext.size;\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge;\n\n  var listItemRef = useRef(null);\n  useEffect(function () {\n    if (listItemRef.current) {\n      var _register = register({\n        node: listItemRef.current,\n        edgeOffset: null,\n        info: {\n          collection: collection,\n          disabled: disabled,\n          index: index\n        }\n      }),\n          unregister = _register.unregister;\n\n      return unregister;\n    }\n  }, [collection, disabled, index, register]);\n  var classes = merge(className, withClassPrefix(size, {\n    disabled: disabled,\n    bordered: bordered\n  }));\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"listitem\",\n    \"aria-disabled\": disabled\n  }, rest, {\n    ref: mergeRefs(listItemRef, ref),\n    className: classes\n  }), children);\n});\nListItem.displayName = 'ListItem';\nListItem.propTypes = {\n  index: PropTypes.number,\n  collection: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  disabled: PropTypes.bool,\n  children: PropTypes.node\n};\nexport default ListItem;","map":null,"metadata":{},"sourceType":"module"}
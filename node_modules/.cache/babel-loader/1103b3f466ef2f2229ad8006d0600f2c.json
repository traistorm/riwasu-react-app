{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _utils = _interopRequireDefault(require(\"./utils\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _Image = _interopRequireDefault(require(\"./Image\"));\n\nvar _ImagePreviewOverlay = _interopRequireDefault(require(\"./ImagePreviewOverlay\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar SideBySideRenderer = function SideBySideRenderer(props) {\n  var itemPosition = props.itemPosition,\n      active = props.active,\n      elementDimensions = props.elementDimensions,\n      elementOffset = props.elementOffset,\n      itemDimensions = props.itemDimensions,\n      imageSrc = props.imageSrc,\n      largeImageSrc = props.largeImageSrc,\n      imageAlt = props.imageAlt,\n      itemRef = props.itemRef,\n      overlayOpacity = props.overlayOpacity,\n      overlayBoxOpacity = props.overlayBoxOpacity,\n      overlayBackgroundColor = props.overlayBackgroundColor,\n      overlayBoxColor = props.overlayBoxColor,\n      overlayBoxImage = props.overlayBoxImage,\n      overlayBoxImageSize = props.overlayBoxImageSize,\n      alwaysInPlace = props.alwaysInPlace,\n      transitionSpeed = props.transitionSpeed,\n      transitionSpeedInPlace = props.transitionSpeedInPlace,\n      renderOverlay = props.renderOverlay,\n      cursorStyle = props.cursorStyle,\n      onImageLoad = props.onImageLoad,\n      onLargeImageLoad = props.onLargeImageLoad,\n      onLoadRefresh = props.onLoadRefresh,\n      switchSides = props.switchSides,\n      fillAvailableSpace = props.fillAvailableSpace,\n      fillAlignTop = props.fillAlignTop,\n      fillGapLeft = props.fillGapLeft,\n      fillGapRight = props.fillGapRight,\n      fillGapTop = props.fillGapTop,\n      fillGapBottom = props.fillGapBottom,\n      inPlaceMinBreakpoint = props.inPlaceMinBreakpoint,\n      zoomContainerBorder = props.zoomContainerBorder,\n      zoomContainerBoxShadow = props.zoomContainerBoxShadow;\n  var zoomContainerDimensions = {\n    width: elementDimensions.width,\n    height: elementDimensions.height\n  };\n  var zoomContainerStyle = {};\n  var availableWidth = 0;\n  var availableHeight = 0;\n  var windowWidth = 0;\n  var zoomGapVertical = fillGapTop + fillGapBottom;\n  var zoomGapHorizontal = fillGapLeft + fillGapRight;\n\n  try {\n    var _document$documentEle = document.documentElement,\n        clientWidth = _document$documentEle.clientWidth,\n        clientHeight = _document$documentEle.clientHeight;\n    var _window = window,\n        innerWidth = _window.innerWidth;\n    availableWidth = clientWidth;\n    availableHeight = clientHeight;\n    windowWidth = innerWidth;\n  } catch (e) {}\n\n  var inPlace = alwaysInPlace || windowWidth < inPlaceMinBreakpoint;\n\n  if (fillAvailableSpace && !inPlace) {\n    var left = elementDimensions.width + elementOffset.left;\n\n    if (fillAlignTop) {\n      zoomContainerDimensions.height = Math.min(itemDimensions.height, availableHeight - elementOffset.top - zoomGapVertical + fillGapTop);\n      zoomContainerDimensions.top = fillGapTop;\n    } else {\n      zoomContainerDimensions.height = Math.min(itemDimensions.height, availableHeight - zoomGapVertical);\n      var offsetTop = -elementOffset.top + fillGapTop;\n      var maxOffsetTop = availableHeight - elementOffset.top - (zoomContainerDimensions.height + fillGapBottom);\n      var limitedTop = Math.max(offsetTop, maxOffsetTop);\n      zoomContainerDimensions.top = limitedTop;\n    }\n\n    zoomContainerDimensions.top = Math.min(zoomContainerDimensions.top, 0);\n    zoomContainerStyle.top = \"\".concat(zoomContainerDimensions.top, \"px\");\n\n    if (switchSides) {\n      zoomContainerDimensions.width = Math.min(itemDimensions.width, elementOffset.left - zoomGapHorizontal);\n      zoomContainerDimensions.right = elementDimensions.width + fillGapRight;\n      zoomContainerStyle.right = \"\".concat(zoomContainerDimensions.right, \"px\");\n    } else {\n      zoomContainerDimensions.width = Math.min(itemDimensions.width, availableWidth - left - zoomGapHorizontal);\n      zoomContainerDimensions.left = elementDimensions.width + fillGapLeft;\n      zoomContainerStyle.left = \"\".concat(zoomContainerDimensions.left, \"px\");\n    }\n  } else {\n    if (switchSides) {\n      inPlace = inPlace || elementOffset.left < elementDimensions.width;\n    } else {\n      inPlace = inPlace || elementDimensions.width * 2 + elementOffset.left > availableWidth;\n    }\n  }\n\n  var legalSize = itemDimensions.width > elementDimensions.width;\n  var isActive = legalSize && active;\n  var transSpeed = inPlace ? transitionSpeedInPlace : transitionSpeed;\n  var smallImageSize = {\n    width: elementDimensions.width,\n    height: elementDimensions.height\n  };\n  var previewSize = {\n    width: Math.floor(smallImageSize.width * (zoomContainerDimensions.width / itemDimensions.width)),\n    height: Math.floor(smallImageSize.height * (zoomContainerDimensions.height / itemDimensions.height))\n  };\n  var position = {\n    x: 0,\n    y: 0\n  };\n\n  var itemPositionAdj = _objectSpread({}, itemPosition);\n\n  var previewOffset = {\n    x: inPlace ? 0 : previewSize.width / 2,\n    y: inPlace ? 0 : previewSize.height / 2\n  };\n  itemPositionAdj.x = Math.max(previewOffset.x, itemPositionAdj.x);\n  itemPositionAdj.x = Math.min(smallImageSize.width - previewOffset.x, itemPositionAdj.x);\n  itemPositionAdj.y = Math.max(previewOffset.y, itemPositionAdj.y);\n  itemPositionAdj.y = Math.min(smallImageSize.height - previewOffset.y, itemPositionAdj.y);\n  position = _objectSpread({}, itemPositionAdj);\n  var zoomContainerSize = inPlace ? smallImageSize : zoomContainerDimensions;\n  position.x = _utils[\"default\"].convertRange(previewOffset.x, smallImageSize.width - previewOffset.x, itemDimensions.width * -1 + zoomContainerSize.width, 0, position.x);\n  position.y = _utils[\"default\"].convertRange(previewOffset.y, smallImageSize.height - previewOffset.y, itemDimensions.height * -1 + zoomContainerSize.height, 0, position.y);\n  position.x = _utils[\"default\"].invertNumber(itemDimensions.width * -1 + zoomContainerSize.width, 0, position.x);\n  position.y = _utils[\"default\"].invertNumber(itemDimensions.height * -1 + zoomContainerSize.height, 0, position.y);\n  previewSize.left = Math.floor(itemPositionAdj.x - previewOffset.x) || 0;\n  previewSize.right = Math.floor(itemPositionAdj.x + previewOffset.x) || 0;\n  previewSize.top = Math.floor(itemPositionAdj.y - previewOffset.y) || 0;\n  previewSize.bottom = Math.floor(itemPositionAdj.y + previewOffset.y) || 0;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: {\n      position: \"relative\"\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Image[\"default\"], {\n    style: {\n      width: \"100%\",\n      display: \"block\",\n      cursor: legalSize ? cursorStyle : \"default\"\n    },\n    src: imageSrc,\n    alt: imageAlt,\n    onImageLoad: onImageLoad,\n    onLoadRefresh: onLoadRefresh\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: _objectSpread(_objectSpread(_objectSpread({}, _styles[\"default\"].getZoomContainerStyle(zoomContainerSize.width, zoomContainerSize.height, inPlace, switchSides)), {}, {\n      opacity: isActive ? \"1\" : \"0\",\n      transition: \"opacity \".concat(transSpeed, \"s ease\"),\n      zIndex: \"100\"\n    }, zoomContainerStyle), {}, {\n      border: zoomContainerBorder,\n      boxShadow: zoomContainerBoxShadow\n    })\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Image[\"default\"], {\n    style: _styles[\"default\"].getLargeImageStyle(position.x, position.y, true),\n    src: largeImageSrc || imageSrc,\n    alt: imageAlt,\n    ref: itemRef,\n    onImageLoad: onLargeImageLoad,\n    onLoadRefresh: onLoadRefresh\n  })), /*#__PURE__*/_react[\"default\"].createElement(_ImagePreviewOverlay[\"default\"], {\n    previewWidth: previewSize.width,\n    previewHeight: previewSize.height,\n    previewPosLeft: previewSize.left,\n    previewPosRight: previewSize.right,\n    previewPosTop: previewSize.top,\n    previewPosBottom: previewSize.bottom,\n    imageWidth: smallImageSize.width,\n    imageHeight: smallImageSize.height,\n    overlayOpacity: overlayOpacity,\n    overlayBoxOpacity: overlayBoxOpacity,\n    overlayBackgroundColor: overlayBackgroundColor,\n    overlayBoxColor: overlayBoxColor,\n    overlayBoxImage: overlayBoxImage,\n    overlayBoxImageSize: overlayBoxImageSize,\n    active: isActive && !inPlace,\n    transitionSpeed: transSpeed\n  }), renderOverlay ? renderOverlay(active) : null);\n};\n\nvar _default = SideBySideRenderer;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}
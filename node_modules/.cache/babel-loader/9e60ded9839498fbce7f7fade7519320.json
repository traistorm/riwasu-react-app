{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport fileBrowser from '../modules/fileBrowser';\nexport default {\n  name: 'imageGallery',\n\n  /**\n   * @description Constructor\n   * @param {Object} core Core object \n   */\n  add: function add(core) {\n    core.addModule([fileBrowser]);\n    var context = core.context;\n    context.imageGallery = {\n      title: core.lang.toolbar.imageGallery,\n      // @Required @Override fileBrowser - File browser window title.\n      url: core.options.imageGalleryUrl,\n      // @Required @Override fileBrowser - File server url.\n      header: core.options.imageGalleryHeader,\n      // @Required @Override fileBrowser - File server http header.\n      listClass: 'se-image-list',\n      // @Required @Override fileBrowser - Class name of list div.\n      itemTemplateHandler: this.drawItems,\n      // @Required @Override fileBrowser - Function that defines the HTML of an file item.\n      selectorHandler: this.setImage.bind(core),\n      // @Required @Override fileBrowser - Function that action when item click.\n      columnSize: 4 // @Option @Override fileBrowser - Number of \"div.se-file-item-column\" to be created (default: 4)\n\n    };\n  },\n\n  /**\n   * @Required @Override fileBrowser\n   * @description Open a file browser.\n   * @param {Function|null} selectorHandler When the function comes as an argument value, it substitutes \"context.selectorHandler\".\n   */\n  open: function open(selectorHandler) {\n    this.plugins.fileBrowser.open.call(this, 'imageGallery', selectorHandler);\n  },\n\n  /**\n   * @Required @Override fileBrowser\n   * @description Define the HTML of the item to be put in \"div.se-file-item-column\".\n   * Format: [\n   *      { src: \"image src\", name: \"name(@option)\", alt: \"image alt(@option)\", tag: \"tag name(@option)\" }\n   * ]\n   * @param {Object} item Item of the response data's array\n   */\n  drawItems: function drawItems(item) {\n    var srcName = item.src.split('/').pop();\n    return '<div class=\"se-file-item-img\"><img src=\"' + (item.thumbnail || item.src) + '\" alt=\"' + (item.alt || srcName) + '\" data-command=\"pick\" data-value=\"' + (item.src || item.thumbnail) + '\">' + '<div class=\"se-file-img-name se-file-name-back\"></div>' + '<div class=\"se-file-img-name __se__img_name\">' + (item.name || srcName) + '</div>' + '</div>';\n  },\n  setImage: function setImage(target) {\n    this.callPlugin('image', function () {\n      var file = {\n        name: target.parentNode.querySelector('.__se__img_name').textContent,\n        size: 0\n      };\n      this.plugins.image.create_image.call(this, target.getAttribute('data-value'), null, this.context.image._origin_w, this.context.image._origin_h, 'none', file, target.alt);\n    }.bind(this), null);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
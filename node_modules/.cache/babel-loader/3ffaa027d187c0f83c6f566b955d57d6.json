{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from '../utils';\nvar PlaceholderParagraph = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      _props$rows = props.rows,\n      rows = _props$rows === void 0 ? 2 : _props$rows,\n      _props$rowHeight = props.rowHeight,\n      rowHeight = _props$rowHeight === void 0 ? 10 : _props$rowHeight,\n      _props$rowMargin = props.rowMargin,\n      rowMargin = _props$rowMargin === void 0 ? 20 : _props$rowMargin,\n      graph = props.graph,\n      active = props.active,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'placeholder' : _props$classPrefix,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"className\", \"rows\", \"rowHeight\", \"rowMargin\", \"graph\", \"active\", \"classPrefix\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix,\n      withClassPrefix = _useClassNames.withClassPrefix;\n\n  var graphShape = graph === true ? 'square' : graph;\n  var rowElements = useMemo(function () {\n    var rowArr = [];\n\n    for (var i = 0; i < rows; i++) {\n      var styles = {\n        width: Math.random() * 75 + 25 + \"%\",\n        height: rowHeight,\n        marginTop: i > 0 ? rowMargin : Number(rowMargin) / 2\n      };\n      rowArr.push( /*#__PURE__*/React.createElement(\"p\", {\n        key: i,\n        style: styles\n      }));\n    }\n\n    return rowArr;\n  }, [rowHeight, rowMargin, rows]);\n  var classes = merge(className, withClassPrefix('paragraph', {\n    active: active\n  }));\n  var graphClasses = prefix('paragraph-graph', \"paragraph-graph-\" + graphShape);\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), graphShape && /*#__PURE__*/React.createElement(\"div\", {\n    className: graphClasses\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix('paragraph-graph-inner')\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('paragraph-rows')\n  }, rowElements));\n});\nPlaceholderParagraph.displayName = 'PlaceholderParagraph';\nPlaceholderParagraph.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  rows: PropTypes.number,\n  rowHeight: PropTypes.number,\n  rowMargin: PropTypes.number,\n  graph: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['circle', 'square', 'image'])]),\n  active: PropTypes.bool\n};\nexport default PlaceholderParagraph;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/enter\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport EnterCommand from './entercommand';\nimport EnterObserver from './enterobserver';\n/**\n * This plugin handles the <kbd>Enter</kbd> key (hard line break) in the editor.\n *\n * See also the {@link module:enter/shiftenter~ShiftEnter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Enter = /*#__PURE__*/function (_Plugin) {\n  _inherits(Enter, _Plugin);\n\n  function Enter() {\n    _classCallCheck(this, Enter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Enter).apply(this, arguments));\n  }\n\n  _createClass(Enter, [{\n    key: \"init\",\n    value: function init() {\n      var editor = this.editor;\n      var view = editor.editing.view;\n      var viewDocument = view.document;\n      view.addObserver(EnterObserver);\n      editor.commands.add('enter', new EnterCommand(editor));\n      this.listenTo(viewDocument, 'enter', function (evt, data) {\n        data.preventDefault(); // The soft enter key is handled by the ShiftEnter plugin.\n\n        if (data.isSoft) {\n          return;\n        }\n\n        editor.execute('enter');\n        view.scrollToTheSelection();\n      }, {\n        priority: 'low'\n      });\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Enter';\n    }\n  }]);\n\n  return Enter;\n}(Plugin);\n\nexport { Enter as default };","map":null,"metadata":{},"sourceType":"module"}
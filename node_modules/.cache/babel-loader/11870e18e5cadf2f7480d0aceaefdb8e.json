{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { AutoSizer, List } from '../Picker/VirtualizedList';\nimport { DateUtils, useClassNames } from '../utils';\nimport MonthDropdownItem from './MonthDropdownItem';\nimport { useCalendarContext } from './CalendarContext';\nvar monthMap = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n/**\n * Set the row height.\n * Add 1px to the first and last lines.\n */\n\nfunction getRowHeight(count) {\n  return function (_ref) {\n    var index = _ref.index;\n\n    if (index === 0 || count - 1 === index) {\n      return 75 + 1;\n    }\n\n    return 75;\n  };\n}\n\nvar MonthDropdown = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'calendar-month-dropdown' : _props$classPrefix,\n      _props$limitEndYear = props.limitEndYear,\n      limitEndYear = _props$limitEndYear === void 0 ? 5 : _props$limitEndYear,\n      show = props.show,\n      _props$height = props.height,\n      defaultHeight = _props$height === void 0 ? 221 : _props$height,\n      _props$width = props.width,\n      defaultWidth = _props$width === void 0 ? 256 : _props$width,\n      disabledMonth = props.disabledMonth,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"className\", \"classPrefix\", \"limitEndYear\", \"show\", \"height\", \"width\", \"disabledMonth\"]);\n\n  var _useCalendarContext = useCalendarContext(),\n      _useCalendarContext$d = _useCalendarContext.date,\n      date = _useCalendarContext$d === void 0 ? new Date() : _useCalendarContext$d;\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix;\n\n  var getRowCount = useCallback(function () {\n    return DateUtils.getYear(new Date()) + limitEndYear;\n  }, [limitEndYear]);\n  var isMonthDisabled = useCallback(function (year, month) {\n    if (disabledMonth) {\n      var days = DateUtils.getDaysInMonth(new Date(year, month)); // If all dates in a month are disabled, disable the current month\n\n      for (var i = 1; i <= days; i++) {\n        if (!disabledMonth(new Date(year, month, i))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }, [disabledMonth]);\n\n  var rowRenderer = function rowRenderer(_ref2) {\n    var index = _ref2.index,\n        key = _ref2.key,\n        style = _ref2.style;\n    var selectedMonth = DateUtils.getMonth(date);\n    var selectedYear = DateUtils.getYear(date);\n    var year = index + 1;\n    var isSelectedYear = year === selectedYear;\n    var count = getRowCount();\n    var titleClassName = prefix('year', {\n      'year-active': isSelectedYear\n    });\n    var rowClassName = merge(prefix('row'), {\n      'first-row': index === 0,\n      'last-row': index === count - 1\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: rowClassName,\n      role: \"row\",\n      key: key,\n      style: style\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: titleClassName,\n      role: \"rowheader\"\n    }, year), /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('list'),\n      role: \"gridcell\"\n    }, monthMap.map(function (item, month) {\n      return /*#__PURE__*/React.createElement(MonthDropdownItem, {\n        disabled: isMonthDisabled(year, month),\n        active: isSelectedYear && month === selectedMonth,\n        key: month + \"_\" + item,\n        month: month + 1,\n        year: year\n      });\n    })));\n  };\n\n  var count = getRowCount();\n  var classes = merge(className, withClassPrefix(), {\n    show: show\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"menu\"\n  }, rest, {\n    ref: ref,\n    className: classes\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('content')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('scroll')\n  }, show && /*#__PURE__*/React.createElement(AutoSizer, {\n    defaultHeight: defaultHeight,\n    defaultWidth: defaultWidth\n  }, function (_ref3) {\n    var height = _ref3.height,\n        width = _ref3.width;\n    return /*#__PURE__*/React.createElement(List, {\n      className: prefix('row-wrapper'),\n      width: width || defaultWidth,\n      height: height || defaultHeight,\n      rowHeight: getRowHeight(count),\n      rowCount: count,\n      scrollToIndex: DateUtils.getYear(date),\n      rowRenderer: rowRenderer\n    });\n  }))));\n});\nMonthDropdown.displayName = 'MonthDropdown';\nMonthDropdown.propTypes = {\n  limitEndYear: PropTypes.number,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  show: PropTypes.bool,\n  disabledMonth: PropTypes.func\n};\nexport default MonthDropdown;","map":null,"metadata":{},"sourceType":"module"}
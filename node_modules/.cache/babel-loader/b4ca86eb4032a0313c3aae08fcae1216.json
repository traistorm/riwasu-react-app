{"ast":null,"code":"/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n'use strict';\n\nimport colorPicker from '../modules/_colorPicker';\nexport default {\n  name: 'hiliteColor',\n  display: 'submenu',\n  add: function add(core, targetElement) {\n    core.addModule([colorPicker]);\n    var context = core.context;\n    context.hiliteColor = {\n      previewEl: null,\n      colorInput: null,\n      colorList: null\n    };\n    /** set submenu */\n\n    var listDiv = this.setSubmenu(core);\n    context.hiliteColor.colorInput = listDiv.querySelector('._se_color_picker_input');\n    /** add event listeners */\n\n    context.hiliteColor.colorInput.addEventListener('keyup', this.onChangeInput.bind(core));\n    listDiv.querySelector('._se_color_picker_submit').addEventListener('click', this.submit.bind(core));\n    listDiv.querySelector('._se_color_picker_remove').addEventListener('click', this.remove.bind(core));\n    listDiv.addEventListener('click', this.pickup.bind(core));\n    context.hiliteColor.colorList = listDiv.querySelectorAll('li button');\n    /** append target button menu */\n\n    core.initMenuTarget(this.name, targetElement, listDiv);\n    /** empty memory */\n\n    listDiv = null;\n  },\n  setSubmenu: function setSubmenu(core) {\n    var colorArea = core.context.colorPicker.colorListHTML;\n    var listDiv = core.util.createElement('DIV');\n    listDiv.className = 'se-submenu se-list-layer';\n    listDiv.innerHTML = colorArea;\n    return listDiv;\n  },\n\n  /**\r\n  * @Override submenu\r\n  */\n  on: function on() {\n    var contextPicker = this.context.colorPicker;\n    var contextHiliteColor = this.context.hiliteColor;\n    contextPicker._colorInput = contextHiliteColor.colorInput;\n    var color = this.wwComputedStyle.backgroundColor;\n    contextPicker._defaultColor = color ? this.plugins.colorPicker.isHexColor(color) ? color : this.plugins.colorPicker.rgb2hex(color) : \"#ffffff\";\n    contextPicker._styleProperty = 'backgroundColor';\n    contextPicker._colorList = contextHiliteColor.colorList;\n    this.plugins.colorPicker.init.call(this, this.getSelectionNode(), null);\n  },\n\n  /**\r\n  * @Override _colorPicker\r\n  */\n  onChangeInput: function onChangeInput(e) {\n    this.plugins.colorPicker.setCurrentColor.call(this, e.target.value);\n  },\n  submit: function submit() {\n    this.plugins.hiliteColor.applyColor.call(this, this.context.colorPicker._currentColor);\n  },\n  pickup: function pickup(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.plugins.hiliteColor.applyColor.call(this, e.target.getAttribute('data-value'));\n  },\n  remove: function remove() {\n    this.nodeChange(null, ['background-color'], ['span'], true);\n    this.submenuOff();\n  },\n  applyColor: function applyColor(color) {\n    if (!color) return;\n    var newNode = this.util.createElement('SPAN');\n    newNode.style.backgroundColor = color;\n    this.nodeChange(newNode, ['background-color'], null, null);\n    this.submenuOff();\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
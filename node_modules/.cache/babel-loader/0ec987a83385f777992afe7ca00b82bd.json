{"ast":null,"code":"import _classCallCheck from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/colorgrid/colortile\n */\nimport ButtonView from '../button/buttonview';\nimport checkIcon from '../../theme/icons/color-tile-check.svg';\n/**\n * This class represents a single color tile in the {@link module:ui/colorgrid/colorgrid~ColorGridView}.\n *\n * @extends module:ui/button/buttonview~ButtonView\n */\n\nvar ColorTileView = /*#__PURE__*/function (_ButtonView) {\n  _inherits(ColorTileView, _ButtonView);\n\n  function ColorTileView(locale) {\n    var _this;\n\n    _classCallCheck(this, ColorTileView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColorTileView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * String representing a color shown as tile's background.\n     *\n     * @type {String}\n     */\n\n    _this.set('color');\n    /**\n     * A flag that toggles a special CSS class responsible for displaying\n     * a border around the button.\n     *\n     * @type {Boolean}\n     */\n\n\n    _this.set('hasBorder');\n\n    _this.icon = checkIcon;\n\n    _this.extendTemplate({\n      attributes: {\n        style: {\n          backgroundColor: bind.to('color')\n        },\n        class: ['ck', 'ck-color-grid__tile', bind.if('hasBorder', 'ck-color-table__color-tile_bordered')]\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ColorTileView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(ColorTileView.prototype), \"render\", this).call(this);\n\n      this.iconView.fillColor = 'hsl(0, 0%, 100%)';\n    }\n  }]);\n\n  return ColorTileView;\n}(ButtonView);\n\nexport { ColorTileView as default };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagecaption/imagecaptionui\n */\nimport { Plugin, icons } from 'ckeditor5/src/core';\nimport { ButtonView } from 'ckeditor5/src/ui';\nimport ImageCaptionUtils from './imagecaptionutils';\n/**\n * The image caption UI plugin. It introduces the `'toggleImageCaption'` UI button.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar ImageCaptionUI = /*#__PURE__*/function (_Plugin) {\n  _inherits(ImageCaptionUI, _Plugin);\n\n  function ImageCaptionUI() {\n    _classCallCheck(this, ImageCaptionUI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ImageCaptionUI).apply(this, arguments));\n  }\n\n  _createClass(ImageCaptionUI, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var editingView = editor.editing.view;\n      var imageCaptionUtils = editor.plugins.get('ImageCaptionUtils');\n      var t = editor.t;\n      editor.ui.componentFactory.add('toggleImageCaption', function (locale) {\n        var command = editor.commands.get('toggleImageCaption');\n        var view = new ButtonView(locale);\n        view.set({\n          icon: icons.caption,\n          tooltip: true,\n          isToggleable: true\n        });\n        view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n        view.bind('label').to(command, 'value', function (value) {\n          return value ? t('Toggle caption off') : t('Toggle caption on');\n        });\n\n        _this.listenTo(view, 'execute', function () {\n          editor.execute('toggleImageCaption', {\n            focusCaptionOnShow: true\n          }); // Scroll to the selection and highlight the caption if the caption showed up.\n\n          var modelCaptionElement = imageCaptionUtils.getCaptionFromModelSelection(editor.model.document.selection);\n\n          if (modelCaptionElement) {\n            var figcaptionElement = editor.editing.mapper.toViewElement(modelCaptionElement);\n            editingView.scrollToTheSelection();\n            editingView.change(function (writer) {\n              writer.addClass('image__caption_highlighted', figcaptionElement);\n            });\n          }\n        });\n\n        return view;\n      });\n    }\n  }], [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [ImageCaptionUtils];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'ImageCaptionUI';\n    }\n  }]);\n\n  return ImageCaptionUI;\n}(Plugin);\n\nexport { ImageCaptionUI as default };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectallediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { getCode, parseKeystroke } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport SelectAllCommand from './selectallcommand';\nvar SELECT_ALL_KEYSTROKE = parseKeystroke('Ctrl+A');\n/**\n * The select all editing feature.\n *\n * It registers the `'selectAll'` {@link module:select-all/selectallcommand~SelectAllCommand command}\n * and the <kbd>Ctrl/âŒ˜</kbd>+<kbd>A</kbd> keystroke listener which executes it.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar SelectAllEditing = /*#__PURE__*/function (_Plugin) {\n  _inherits(SelectAllEditing, _Plugin);\n\n  function SelectAllEditing() {\n    _classCallCheck(this, SelectAllEditing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SelectAllEditing).apply(this, arguments));\n  }\n\n  _createClass(SelectAllEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor;\n      var view = editor.editing.view;\n      var viewDocument = view.document;\n      editor.commands.add('selectAll', new SelectAllCommand(editor));\n      this.listenTo(viewDocument, 'keydown', function (eventInfo, domEventData) {\n        if (getCode(domEventData) === SELECT_ALL_KEYSTROKE) {\n          editor.execute('selectAll');\n          domEventData.preventDefault();\n        }\n      });\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'SelectAllEditing';\n    }\n  }]);\n\n  return SelectAllEditing;\n}(Plugin);\n\nexport { SelectAllEditing as default };","map":null,"metadata":{},"sourceType":"module"}
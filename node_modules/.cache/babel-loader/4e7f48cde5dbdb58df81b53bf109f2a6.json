{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _utils = _interopRequireDefault(require(\"./utils\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _Image = _interopRequireDefault(require(\"./Image\"));\n\nvar _ImagePreviewOverlay = _interopRequireDefault(require(\"./ImagePreviewOverlay\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar PictureInPictureRenderer = function PictureInPictureRenderer(props) {\n  var active = props.active,\n      itemPosition = props.itemPosition,\n      elementDimensions = props.elementDimensions,\n      itemDimensions = props.itemDimensions,\n      imageSrc = props.imageSrc,\n      largeImageSrc = props.largeImageSrc,\n      imageAlt = props.imageAlt,\n      itemRef = props.itemRef,\n      previewSizePercentage = props.previewSizePercentage,\n      containerRef = props.containerRef,\n      previewVerticalPos = props.previewVerticalPos,\n      previewOpacity = props.previewOpacity,\n      previewOverlayOpacity = props.previewOverlayOpacity,\n      previewOverlayBoxOpacity = props.previewOverlayBoxOpacity,\n      previewOverlayBackgroundColor = props.previewOverlayBackgroundColor,\n      previewOverlayBoxColor = props.previewOverlayBoxColor,\n      previewOverlayBoxImage = props.previewOverlayBoxImage,\n      previewOverlayBoxImageSize = props.previewOverlayBoxImageSize,\n      renderOverlay = props.renderOverlay,\n      cursorStyle = props.cursorStyle,\n      cursorStyleActive = props.cursorStyleActive,\n      onLoadRefresh = props.onLoadRefresh,\n      _onImageLoad = props.onImageLoad,\n      onLargeImageLoad = props.onLargeImageLoad;\n  var sizeMult = 100 / previewSizePercentage;\n  var containerTop = 0;\n  var containerLeft = 0;\n  var containerWidth = 0;\n\n  if (containerRef.current) {\n    containerWidth = containerRef.current.getBoundingClientRect().width;\n\n    if (previewVerticalPos === \"bottom\") {\n      containerTop = elementDimensions.height * (sizeMult - 1);\n      containerRef.current.style.paddingTop = \"\".concat(containerTop, \"px\");\n    } else {\n      containerRef.current.style.paddingBottom = \"\".concat(elementDimensions.height * (sizeMult - 1), \"px\");\n    }\n\n    if (containerRef.current.style.textAlign === \"right\") {\n      containerLeft = elementDimensions.width * (sizeMult - 1);\n    }\n  }\n\n  var smallImageSize = {\n    width: elementDimensions.width,\n    height: elementDimensions.height\n  };\n  var previewSize = {\n    width: Math.floor(smallImageSize.width * (smallImageSize.width / itemDimensions.width) * sizeMult),\n    height: Math.floor(smallImageSize.height * (smallImageSize.height / itemDimensions.height) * sizeMult)\n  };\n\n  if (isNaN(previewSize.width)) {\n    previewSize.width = 0;\n    previewSize.height = 0;\n  }\n\n  var position = {\n    x: 0,\n    y: 0\n  };\n\n  var itemPositionAdj = _objectSpread({}, itemPosition);\n\n  var previewOffset = {\n    x: previewSize.width / 2,\n    y: previewSize.height / 2\n  };\n  itemPositionAdj.x = Math.max(previewOffset.x, itemPositionAdj.x);\n  itemPositionAdj.x = Math.min(smallImageSize.width - previewOffset.x, itemPositionAdj.x);\n  itemPositionAdj.y = Math.max(previewOffset.y, itemPositionAdj.y);\n  itemPositionAdj.y = Math.min(smallImageSize.height - previewOffset.y, itemPositionAdj.y);\n  position = _objectSpread({}, itemPositionAdj);\n  position.x = _utils[\"default\"].convertRange(previewOffset.x, smallImageSize.width - previewOffset.x, itemDimensions.width * -1 + containerWidth, 0, position.x);\n  position.y = _utils[\"default\"].convertRange(previewOffset.y, smallImageSize.height - previewOffset.y, itemDimensions.height * -1 + smallImageSize.height * sizeMult, 0, position.y);\n  position.x = _utils[\"default\"].invertNumber(itemDimensions.width * -1 + containerWidth, 0, position.x);\n  position.y = _utils[\"default\"].invertNumber(itemDimensions.height * -1 + smallImageSize.height * sizeMult, 0, position.y);\n  previewSize.left = Math.floor(itemPositionAdj.x - previewOffset.x) || 0;\n  previewSize.right = Math.floor(itemPositionAdj.x + previewOffset.x) || 0;\n  previewSize.top = Math.floor(itemPositionAdj.y - previewOffset.y) || 0;\n  previewSize.bottom = Math.floor(itemPositionAdj.y + previewOffset.y) || 0;\n  var legalSize = previewSize.width < smallImageSize.width;\n  var finalCursorStyle = active ? cursorStyleActive : cursorStyle;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      cursor: legalSize ? finalCursorStyle : \"default\"\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Image[\"default\"], {\n    style: {\n      width: \"100%\",\n      display: \"block\",\n      opacity: previewOpacity,\n      visibility: legalSize ? \"visible\" : \"hidden\"\n    },\n    src: imageSrc,\n    alt: imageAlt,\n    onImageLoad: function onImageLoad(e) {\n      onLoadRefresh();\n\n      _onImageLoad(e);\n    },\n    onLoadRefresh: onLoadRefresh\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: _objectSpread(_objectSpread({}, _styles[\"default\"].getZoomContainerStyle(smallImageSize.width, smallImageSize.height, true)), {}, {\n      width: containerWidth + \"px\",\n      height: elementDimensions.height * sizeMult + \"px\",\n      position: \"absolute\",\n      left: -containerLeft,\n      top: -containerTop,\n      fontSize: \"1rem\"\n    })\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Image[\"default\"], {\n    style: _objectSpread(_objectSpread({}, _styles[\"default\"].getLargeImageStyle(position.x, position.y, true)), {}, {\n      visibility: legalSize ? \"visible\" : \"hidden\",\n      zIndex: \"-1\"\n    }),\n    src: largeImageSrc || imageSrc,\n    alt: imageAlt,\n    ref: itemRef,\n    onImageLoad: onLargeImageLoad,\n    onLoadRefresh: onLoadRefresh\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"img\", {\n    src: imageSrc,\n    alt: imageAlt,\n    style: {\n      display: legalSize ? \"none\" : \"block\",\n      width: \"100%\"\n    }\n  }), renderOverlay ? renderOverlay(active) : null), /*#__PURE__*/_react[\"default\"].createElement(_ImagePreviewOverlay[\"default\"], {\n    previewWidth: previewSize.width,\n    previewHeight: previewSize.height,\n    previewPosLeft: previewSize.left,\n    previewPosRight: previewSize.right,\n    previewPosTop: previewSize.top,\n    previewPosBottom: previewSize.bottom,\n    imageWidth: smallImageSize.width,\n    imageHeight: smallImageSize.height,\n    overlayOpacity: previewOverlayOpacity,\n    overlayBoxOpacity: previewOverlayBoxOpacity,\n    overlayBackgroundColor: previewOverlayBackgroundColor,\n    overlayBoxColor: previewOverlayBoxColor,\n    overlayBoxImage: previewOverlayBoxImage,\n    overlayBoxImageSize: previewOverlayBoxImageSize,\n    active: legalSize\n  }));\n};\n\nvar _default = PictureInPictureRenderer;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}
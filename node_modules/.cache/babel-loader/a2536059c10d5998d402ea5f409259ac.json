{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/enabletoolbarkeyboardfocus\n */\n\n/**\n * Enables focus/blur toolbar navigation using `Alt+F10` and `Esc` keystrokes.\n *\n * @param {Object} options Options of the utility.\n * @param {*} options.origin A view to which the focus will return when `Esc` is pressed and\n * `options.toolbar` is focused.\n * @param {module:utils/keystrokehandler~KeystrokeHandler} options.originKeystrokeHandler A keystroke\n * handler to register `Alt+F10` keystroke.\n * @param {module:utils/focustracker~FocusTracker} options.originFocusTracker A focus tracker\n * for `options.origin`.\n * @param {module:ui/toolbar/toolbarview~ToolbarView} options.toolbar A toolbar which is to gain\n * focus when `Alt+F10` is pressed.\n * @param {Function} [options.beforeFocus] A callback executed before the `options.toolbar` gains focus\n * upon the `Alt+F10` keystroke.\n * @param {Function} [options.afterBlur] A callback executed after `options.toolbar` loses focus upon\n * `Esc` keystroke but before the focus goes back to `options.origin`.\n */\nexport default function enableToolbarKeyboardFocus(_ref) {\n  var origin = _ref.origin,\n      originKeystrokeHandler = _ref.originKeystrokeHandler,\n      originFocusTracker = _ref.originFocusTracker,\n      toolbar = _ref.toolbar,\n      beforeFocus = _ref.beforeFocus,\n      afterBlur = _ref.afterBlur;\n  // Because toolbar items can get focus, the overall state of the toolbar must\n  // also be tracked.\n  originFocusTracker.add(toolbar.element); // Focus the toolbar on the keystroke, if not already focused.\n\n  originKeystrokeHandler.set('Alt+F10', function (data, cancel) {\n    if (originFocusTracker.isFocused && !toolbar.focusTracker.isFocused) {\n      if (beforeFocus) {\n        beforeFocus();\n      }\n\n      toolbar.focus();\n      cancel();\n    }\n  }); // Blur the toolbar and bring the focus back to origin.\n\n  toolbar.keystrokes.set('Esc', function (data, cancel) {\n    if (toolbar.focusTracker.isFocused) {\n      origin.focus();\n\n      if (afterBlur) {\n        afterBlur();\n      }\n\n      cancel();\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
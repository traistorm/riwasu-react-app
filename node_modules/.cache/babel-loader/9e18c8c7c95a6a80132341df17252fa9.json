{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Ripple from '../Ripple';\nimport { useClassNames, createChainedFunction } from '../utils';\nvar PaginationButton = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'button' : _props$as,\n      active = props.active,\n      disabled = props.disabled,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'pagination-btn' : _props$classPrefix,\n      children = props.children,\n      eventKey = props.eventKey,\n      style = props.style,\n      onSelect = props.onSelect,\n      onClick = props.onClick,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"active\", \"disabled\", \"className\", \"classPrefix\", \"children\", \"eventKey\", \"style\", \"onSelect\", \"onClick\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix;\n\n  var classes = merge(className, withClassPrefix({\n    active: active,\n    disabled: disabled\n  }));\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      return;\n    }\n\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(eventKey, event);\n  }, [disabled, eventKey, onSelect]);\n  var asProps = {};\n\n  if (typeof Component !== 'string') {\n    asProps.eventKey = eventKey;\n    asProps.active = active;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, asProps, {\n    disabled: disabled,\n    onClick: createChainedFunction(onClick, handleClick),\n    ref: ref,\n    className: classes,\n    style: style\n  }), children, !disabled ? /*#__PURE__*/React.createElement(Ripple, null) : null);\n});\nPaginationButton.displayName = 'PaginationButton';\nPaginationButton.propTypes = {\n  classPrefix: PropTypes.string,\n  eventKey: PropTypes.any,\n  onSelect: PropTypes.func,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  style: PropTypes.object,\n  renderItem: PropTypes.func\n};\nexport default PaginationButton;","map":null,"metadata":{},"sourceType":"module"}
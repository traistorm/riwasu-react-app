{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '../IconButton';\nimport { useClassNames } from '../utils';\nimport AngleLeft from '@rsuite/icons/legacy/AngleLeft';\nimport AngleRight from '@rsuite/icons/legacy/AngleRight';\nvar SidenavToggle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      expanded = props.expanded,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'sidenav-toggle' : _props$classPrefix,\n      onToggle = props.onToggle,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"expanded\", \"className\", \"classPrefix\", \"onToggle\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix;\n\n  var classes = merge(className, withClassPrefix({\n    collapsed: !expanded\n  }));\n  var Icon = expanded ? AngleRight : AngleLeft;\n\n  var handleToggle = function handleToggle(event) {\n    onToggle === null || onToggle === void 0 ? void 0 : onToggle(!expanded, event);\n  };\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    appearance: \"default\",\n    icon: /*#__PURE__*/React.createElement(Icon, null),\n    onClick: handleToggle\n  }));\n});\nSidenavToggle.displayName = 'SidenavToggle';\nSidenavToggle.propTypes = {\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  expanded: PropTypes.bool,\n  onToggle: PropTypes.func\n};\nexport default SidenavToggle;","map":null,"metadata":{},"sourceType":"module"}
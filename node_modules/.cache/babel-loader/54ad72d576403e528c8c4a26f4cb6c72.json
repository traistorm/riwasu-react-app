{"ast":null,"code":"import _classCallCheck from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Project\\\\React\\\\riwasu-react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageinsert/ui/imageinsertformrowview\n */\nimport { View } from 'ckeditor5/src/ui';\nimport '../../../theme/imageinsertformrowview.css';\n/**\n * The class representing a single row in a complex form,\n * used by {@link module:image/imageinsert/ui/imageinsertpanelview~ImageInsertPanelView}.\n *\n * **Note**: For now this class is private. When more use cases appear (beyond `ckeditor5-table` and `ckeditor5-image`),\n * it will become a component in `ckeditor5-ui`.\n *\n * @private\n * @extends module:ui/view~View\n */\n\nvar ImageUploadFormRowView = /*#__PURE__*/function (_View) {\n  _inherits(ImageUploadFormRowView, _View);\n\n  /**\n   * Creates an instance of the form row class.\n   *\n   * @param {module:utils/locale~Locale} locale The locale instance.\n   * @param {Object} options\n   * @param {Array.<module:ui/view~View>} [options.children]\n   * @param {String} [options.class]\n   * @param {module:ui/view~View} [options.labelView] When passed, the row gets the `group` and `aria-labelledby`\n   * DOM attributes and gets described by the label.\n   */\n  function ImageUploadFormRowView(locale) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, ImageUploadFormRowView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageUploadFormRowView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * An additional CSS class added to the {@link #element}.\n     *\n     * @observable\n     * @member {String} #class\n     */\n\n    _this.set('class', options.class || null);\n    /**\n     * A collection of row items (buttons, dropdowns, etc.).\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n\n    _this.children = _this.createCollection();\n\n    if (options.children) {\n      options.children.forEach(function (child) {\n        return _this.children.add(child);\n      });\n    }\n    /**\n     * The role property reflected by the `role` DOM attribute of the {@link #element}.\n     *\n     * **Note**: Used only when a `labelView` is passed to constructor `options`.\n     *\n     * @private\n     * @observable\n     * @member {String} #role\n     */\n\n\n    _this.set('_role', null);\n    /**\n     * The ARIA property reflected by the `aria-labelledby` DOM attribute of the {@link #element}.\n     *\n     * **Note**: Used only when a `labelView` is passed to constructor `options`.\n     *\n     * @private\n     * @observable\n     * @member {String} #ariaLabelledBy\n     */\n\n\n    _this.set('_ariaLabelledBy', null);\n\n    if (options.labelView) {\n      _this.set({\n        _role: 'group',\n        _ariaLabelledBy: options.labelView.id\n      });\n    }\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-form__row', bind.to('class')],\n        role: bind.to('_role'),\n        'aria-labelledby': bind.to('_ariaLabelledBy')\n      },\n      children: _this.children\n    });\n\n    return _this;\n  }\n\n  return ImageUploadFormRowView;\n}(View);\n\nexport { ImageUploadFormRowView as default };","map":null,"metadata":{},"sourceType":"module"}